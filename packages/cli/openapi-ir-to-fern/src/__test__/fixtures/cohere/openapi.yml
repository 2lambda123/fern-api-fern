# 20240201170948
# https://docs.cohere.com/openapi/631a8a2fd84f82005fee56b5
openapi: 3.1.0
info:
  title: API Reference
  version: "1.0"
  description: >-
    The Cohere Platform is centered around models.


    Each model has a different amount of power (i.e. parameters), to be used for
    different tasks.


    Cohere also supports finetuning of baseline models to improve performance on
    downstream tasks or to teach the model large quantities of information which
    cannot be extracted with few-shot learning or prompt engineering.
  summary: Cohere's API
  contact:
    name: Cohere Developers
    url: "https://cohere.com/"
    email: team@cohere.ai
  termsOfService: "https://cohere.com/terms-of-use"
servers:
  - url: "https://api.cohere.ai/v1"
    description: production
security:
  - bearerAuth: []
tags:
  - name: /datasets
    description: Datasets API
  - name: /connectors
    description: Connectors API
  - name: /embed-jobs
    description: Embed Jobs API
paths:
  /chat:
    post:
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      x-fern-audiences:
        - public
      summary: Chat (Beta)
      operationId: chat
      x-fern-streaming:
        stream-condition: $request.stream
        response:
          required:
            - generation_id
            - text
          properties:
            text:
              type: string
              x-fern-audiences:
                - public
              minLength: 1
              description: Contents of the reply generated by the model.
            generation_id:
              type: string
              x-fern-audiences:
                - public
              format: uuid
              description: >-
                Unique identifier for the generated reply. Useful for submitting
                feedback.
            citations:
              type: array
              x-fern-audiences:
                - public
              minItems: 0
              description: Inline citations for the generated reply.
              items:
                $ref: "#/components/schemas/ChatCitation"
            documents:
              type: array
              x-fern-audiences:
                - public
              minItems: 0
              description: Documents seen by the model when generating the reply.
              items:
                $ref: "#/components/schemas/ChatDocument"
            search_queries:
              type: array
              x-fern-audiences:
                - public
              description: >-
                Generated search queries, meant to be used as part of the RAG
                flow.
              items:
                $ref: "#/components/schemas/ChatSearchQuery"
            search_results:
              type: array
              x-fern-audiences:
                - public
              minItems: 0
              description: Documents retrieved from each of the conducted searches.
              items:
                $ref: "#/components/schemas/ChatSearchResult"
        response-stream:
          description: >-
            StreamedChatResponse is returned in streaming mode (specified with
            `stream=True` in the request).
          oneOf:
            - $ref: "#/components/schemas/ChatStreamStartEvent"
            - $ref: "#/components/schemas/ChatSearchQueriesGenerationEvent"
            - $ref: "#/components/schemas/ChatSearchResultsEvent"
            - $ref: "#/components/schemas/ChatTextGenerationEvent"
            - $ref: "#/components/schemas/ChatCitationGenerationEvent"
            - $ref: "#/components/schemas/ChatStreamEndEvent"
          discriminator:
            propertyName: event_type
            mapping:
              stream-start: "#/components/schemas/ChatStreamStartEvent"
              search-queries-generation: "#/components/schemas/ChatSearchQueriesGenerationEvent"
              search-results: "#/components/schemas/ChatSearchResultsEvent"
              text-generation: "#/components/schemas/ChatTextGenerationEvent"
              citation-generation: "#/components/schemas/ChatCitationGenerationEvent"
              stream-end: "#/components/schemas/ChatStreamEndEvent"
      x-readme:
        samples-languages:
          - python
          - curl
          - node
        code-samples:
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const chatStream = await cohere.chatStream({
                    chatHistory: [
                        { role: "USER", message: "Who discovered gravity?" },
                        { role: "CHATBOT", message: "The man who is widely credited with discovering gravity is Sir Isaac Newton" }
                    ],
                    message: "What year was he born?",
                    // perform web search before answering the question. You can also use your own custom connector.
                    connectors: [{ id: "web-search" }],
                });

                for await (const message of chatStream) {
                    if (message.eventType === "text-generation") {
                        console.log(message);
                    }
                }
              })();
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')
              response = co.chat(
                chat_history=[
                  {"role": "USER", "message": "Who discovered gravity?"},
                  {"role": "CHATBOT", "message": "The man who is widely credited with discovering gravity is Sir Isaac Newton"}
                ],
                message="What year was he born?",
                # perform web search before answering the question. You can also use your own custom connector.
                connectors=[{"id": "web-search"}]
              )
              print(response)
          - language: curl
            name: cURL
            code: |-
              curl
                --request POST \
                --url https://api.cohere.ai/v1/chat \
                --header 'accept: application/json' \
                --header 'content-type: application/json' \
                --header 'Authorization: Bearer <<apiKey>>'
                --data '
                {
                  "chat_history": [
                    {"role": "USER", "message": "Who discovered gravity?"},
                    {"role": "CHATBOT", "message": "The man who is widely credited with discovering gravity is Sir Isaac Newton"}
                  ],
                  "message": "What year was he born?",
                  "connectors": [{"id": "web-search"}]
                }'
      description: >
        The `chat` endpoint allows users to have conversations with a Large
        Language Model (LLM) from Cohere. Users can send messages as part of a
        persisted conversation using the `conversation_id` parameter, or they
        can pass in their own conversation history using the `chat_history`
        parameter.


        The endpoint features additional parameters such as
        [connectors](https://docs.cohere.com/docs/connectors) and `documents`
        that enable conversations enriched by external knowledge. We call this
        ["Retrieval Augmented
        Generation"](https://docs.cohere.com/docs/retrieval-augmented-generation-rag),
        or "RAG". For a full breakdown of the Chat API endpoint, document and
        connector modes, and streaming (with code samples), see [this
        guide](https://docs.cohere.com/docs/cochat-beta).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-fern-audiences:
                - public
              x-examples:
                Chat:
                  value:
                    message: Can you give me a global market overview of solar panels?
                    temperature: 0.3
                    stream: false
                    chat_history:
                      - role: User
                        message: Hi!
                      - role: Chatbot
                        message: How can I help you today?
                    prompt_truncation: "OFF"
                Chat with web search:
                  value:
                    message: Can you give me a global market overview of solar panels?
                    temperature: 0.3
                    stream: false
                    chat_history: []
                    connectors:
                      - id: web-search
                    prompt_truncation: AUTO
                Chat with connector:
                  value:
                    message: How do I expense a meal?
                    stream: false
                    connectors:
                      - id: custom-connector-id
                    prompt_truncation: AUTO
              required:
                - message
              properties:
                message:
                  type: string
                  x-fern-audiences:
                    - public
                  description: |
                    Accepts a string.
                    The chat message from the user to the model.
                model:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >
                    Defaults to `command`.


                    The identifier of the model, which can be one of the
                    existing Cohere models or the full ID for a [fine-tuned
                    custom
                    model](https://docs.cohere.com/docs/chat-fine-tuning).


                    Compatible Cohere models are `command` and `command-light`
                    as well as the experimental `command-nightly` and
                    `command-light-nightly` variants. Read more about [Cohere
                    models](https://docs.cohere.com/docs/models).
                stream:
                  description: >
                    Defaults to `false`.


                    When `true`, the response will be a JSON stream of events.
                    The final event will contain the complete response, and will
                    have an `event_type` of `"stream-end"`.


                    Streaming is beneficial for user interfaces that render the
                    contents of the response piece by piece, as it gets
                    generated.
                  type: boolean
                  x-fern-audiences:
                    - public
                preamble_override:
                  description: >
                    When specified, the default Cohere preamble will be replaced
                    with the provided one.
                  type: string
                  x-fern-audiences:
                    - public
                chat_history:
                  type: array
                  x-fern-audiences:
                    - public
                  minItems: 0
                  items:
                    $ref: "#/components/schemas/ChatMessage"
                  description: >
                    A list of previous messages between the user and the model,
                    meant to give the model conversational context for
                    responding to the user's `message`.
                conversation_id:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >
                    An alternative to `chat_history`. Previous conversations can
                    be resumed by providing the conversation's identifier. The
                    contents of `message` and the model's response will be
                    stored as part of this conversation.


                    If a conversation with this id does not already exist, a new
                    conversation will be created.
                prompt_truncation:
                  type: string
                  x-fern-audiences:
                    - public
                  enum:
                    - "OFF"
                    - AUTO
                  description: >
                    Defaults to `AUTO` when `connectors` are specified and `OFF`
                    in all other cases.


                    Dictates how the prompt will be constructed.


                    With `prompt_truncation` set to "AUTO", some elements from
                    `chat_history` and `documents` will be dropped in an attempt
                    to construct a prompt that fits within the model's context
                    length limit.


                    With `prompt_truncation` set to "OFF", no elements will be
                    dropped. If the sum of the inputs exceeds the model's
                    context length limit, a `TooManyTokens` error will be
                    returned.
                connectors:
                  type: array
                  x-fern-audiences:
                    - public
                  minItems: 0
                  items:
                    $ref: "#/components/schemas/ChatConnector"
                  description: >
                    Accepts `{"id": "web-search"}`, and/or the `"id"` for a
                    custom [connector](https://docs.cohere.com/docs/connectors),
                    if you've
                    [created](https://docs.cohere.com/docs/creating-and-deploying-a-connector)
                    one.


                    When specified, the model's reply will be enriched with
                    information found by quering each of the connectors (RAG).
                search_queries_only:
                  type: boolean
                  x-fern-audiences:
                    - public
                  description: >
                    Defaults to `false`.


                    When `true`, the response will only contain a list of
                    generated search queries, but no search will take place, and
                    no reply from the model to the user's `message` will be
                    generated.
                documents:
                  description: >
                    A list of relevant documents that the model can use to
                    enrich its reply. See ['Document
                    Mode'](https://docs.cohere.com/docs/retrieval-augmented-generation-rag#document-mode)
                    in the guide for more information.
                  type: array
                  x-fern-audiences:
                    - public
                  items:
                    $ref: "#/components/schemas/ChatDocument"
                citation_quality:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >
                    Defaults to `"accurate"`.


                    Dictates the approach taken to generating citations as part
                    of the RAG flow by allowing the user to specify whether they
                    want `"accurate"` results or `"fast"` results.
                  enum:
                    - fast
                    - accurate
                temperature:
                  type: number
                  x-fern-audiences:
                    - public
                  format: float
                  minimum: 0
                  maximum: 1
                  description: >
                    Defaults to `0.3`.


                    A non-negative float that tunes the degree of randomness in
                    generation. Lower temperatures mean less random generations,
                    and higher temperatures mean more random generations.


                    Randomness can be further maximized by increasing the  value
                    of the `p` parameter.
                max_tokens:
                  type: integer
                  x-fern-audiences:
                    - public
                  description: >
                    The maximum number of tokens the model will generate as part
                    of the response. Note: Setting a low value may result in
                    incomplete generations.
                  writeOnly: true
                k:
                  type: integer
                  x-fern-audiences:
                    - public
                  description: >
                    Ensures only the top `k` most likely tokens are considered
                    for generation at each step.

                    Defaults to `0`, min value of `0`, max value of `500`.
                  writeOnly: true
                  default: 0
                  minimum: 0
                  maximum: 500
                p:
                  type: number
                  x-fern-audiences:
                    - public
                  description: >
                    Ensures that only the most likely tokens, with total
                    probability mass of `p`, are considered for generation at
                    each step. If both `k` and `p` are enabled, `p` acts after
                    `k`.

                    Defaults to `0.75`. min value of `0.01`, max value of
                    `0.99`.
                  writeOnly: true
                  default: 0.75
                  minimum: 0.01
                  maximum: 0.99
                frequency_penalty:
                  type: number
                  x-fern-audiences:
                    - public
                  description: >
                    Used to reduce repetitiveness of generated tokens. The
                    higher the value, the stronger a penalty is applied to
                    previously present tokens, proportional to how many times
                    they have already appeared in the prompt or prior
                    generation.
                  writeOnly: true
                presence_penalty:
                  type: number
                  x-fern-audiences:
                    - public
                  description: >-
                    Defaults to `0.0`, min value of `0.0`, max value of `1.0`.
                    Can be used to reduce repetitiveness of generated tokens.
                    Similar to `frequency_penalty`, except that this penalty is
                    applied equally to all tokens that have already appeared,
                    regardless of their exact frequencies.
                  writeOnly: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/NonStreamedChatResponse"
                  - $ref: "#/components/schemas/StreamedChatResponse"
                  - $ref: "#/components/schemas/SearchQueriesOnlyResponse"
  /generate:
    post:
      x-fern-audiences:
        - public
      summary: Generate
      operationId: generate
      x-fern-streaming:
        stream-condition: $request.stream
        response:
          type: object
          required:
            - id
            - generations
          properties:
            id:
              type: string
              x-fern-audiences:
                - public
            prompt:
              type: string
              x-fern-audiences:
                - public
              description: Prompt used for generations.
            generations:
              type: array
              x-fern-audiences:
                - public
              description: List of generated results
              items:
                type: object
                x-fern-audiences:
                  - public
                $ref: "#/components/schemas/SingleGeneration"
            meta:
              $ref: "#/components/schemas/ApiMeta"
              x-fern-audiences:
                - public
        response-stream:
          description: >-
            Response in content type stream when `stream` is `true` in the
            request parameters. Generation tokens are streamed with the
            GenerationStream response. The final response is of type
            GenerationFinalResponse.
          oneOf:
            - $ref: "#/components/schemas/GenerateStreamText"
            - $ref: "#/components/schemas/GenerateStreamEnd"
            - $ref: "#/components/schemas/GenerateStreamError"
          discriminator:
            propertyName: event_type
            mapping:
              text-generation: "#/components/schemas/GenerateStreamText"
              stream-end: "#/components/schemas/GenerateStreamEnd"
              stream-error: "#/components/schemas/GenerateStreamError"
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      x-readme:
        samples-languages:
          - python
          - curl
          - node
        code-samples:
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const generate = await cohere.generate({
                    prompt: "Please explain to me how LLMs work",
                });

                console.log(generate);
              })();
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              response = co.generate(
                prompt='Please explain to me how LLMs work',
              )
              print(response)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Generation"
            application/stream+json:
              schema:
                $ref: "#/components/schemas/GenerateStreamedResponse"
          headers:
            X-API-Warning:
              schema:
                type: string
                x-fern-audiences:
                  - public
              description: Warning description for incorrect usage of the API
        "400":
          description: Bad Request
        "498":
          description: Blocked Input or Output
        "500":
          description: Internal Server Error
      description: This endpoint generates realistic text conditioned on a given input.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-fern-audiences:
                - public
              x-examples:
                Example:
                  prompt: Please explain to me how LLMs work
                  max_tokens: 50
                  temperature: 1
                  k: 0
                  p: 0.75
              properties:
                prompt:
                  type: string
                  x-fern-audiences:
                    - public
                  example: Please explain to me how LLMs work
                  description: >
                    The input text that serves as the starting point for
                    generating the response.

                    Note: The prompt will be pre-processed and modified before
                    reaching the model.
                  writeOnly: true
                model:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    The identifier of the model to generate with. Currently
                    available models are `command` (default), `command-nightly`
                    (experimental), `command-light`, and `command-light-nightly`
                    (experimental).

                    Smaller, "light" models are faster, while larger models will
                    perform better. [Custom
                    models](/docs/training-custom-models) can also be supplied
                    with their full ID.
                  writeOnly: true
                num_generations:
                  type: integer
                  x-fern-audiences:
                    - public
                  description: >
                    The maximum number of generations that will be returned.
                    Defaults to `1`, min value of `1`, max value of `5`.
                  writeOnly: true
                stream:
                  type: boolean
                  x-fern-audiences:
                    - public
                  description: >
                    When `true`, the response will be a JSON stream of events.
                    Streaming is beneficial for user interfaces that render the
                    contents of the response piece by piece, as it gets
                    generated.


                    The final event will contain the complete response, and will
                    contain an `is_finished` field set to `true`. The event will
                    also contain a `finish_reason`, which can be one of the
                    following:

                    - `COMPLETE` - the model sent back a finished reply

                    - `MAX_TOKENS` - the reply was cut off because the model
                    reached the maximum number of tokens for its context length

                    - `ERROR` - something went wrong when generating the reply

                    - `ERROR_TOXIC` - the model generated a reply that was
                    deemed toxic
                max_tokens:
                  type: integer
                  x-fern-audiences:
                    - public
                  description: >
                    The maximum number of tokens the model will generate as part
                    of the response. Note: Setting a low value may result in
                    incomplete generations.


                    This parameter is off by default, and if it's not specified,
                    the model will continue generating until it emits an EOS
                    completion token. See [BPE Tokens](/bpe-tokens-wiki) for
                    more details.


                    Can only be set to `0` if `return_likelihoods` is set to
                    `ALL` to get the likelihood of the prompt.
                  writeOnly: true
                truncate:
                  type: string
                  x-fern-audiences:
                    - public
                  default: END
                  enum:
                    - NONE
                    - START
                    - END
                  description: >-
                    One of `NONE|START|END` to specify how the API will handle
                    inputs longer than the maximum token length.


                    Passing `START` will discard the start of the input. `END`
                    will discard the end of the input. In both cases, input is
                    discarded until the remaining input is exactly the maximum
                    input token length for the model.


                    If `NONE` is selected, when the input exceeds the maximum
                    input token length an error will be returned.
                  writeOnly: true
                temperature:
                  type: number
                  x-fern-audiences:
                    - public
                  description: >
                    A non-negative float that tunes the degree of randomness in
                    generation. Lower temperatures mean less random generations.
                    See [Temperature](/temperature-wiki) for more details.

                    Defaults to `0.75`, min value of `0.0`, max value of `5.0`.
                  writeOnly: true
                preset:
                  type: string
                  x-fern-audiences:
                    - public
                  example: my-preset-a58sbd
                  description: >
                    Identifier of a custom preset. A preset is a combination of
                    parameters, such as prompt, temperature etc. You can create
                    presets in the
                    [playground](https://dashboard.cohere.ai/playground/generate).

                    When a preset is specified, the `prompt` parameter becomes
                    optional, and any included parameters will override the
                    preset's parameters.
                  writeOnly: true
                end_sequences:
                  type: array
                  x-fern-audiences:
                    - public
                  description: >-
                    The generated text will be cut at the beginning of the
                    earliest occurrence of an end sequence. The sequence will be
                    excluded from the text.
                  items:
                    type: string
                    x-fern-audiences:
                      - public
                  writeOnly: true
                stop_sequences:
                  type: array
                  x-fern-audiences:
                    - public
                  description: >-
                    The generated text will be cut at the end of the earliest
                    occurrence of a stop sequence. The sequence will be included
                    the text.
                  items:
                    type: string
                    x-fern-audiences:
                      - public
                  writeOnly: true
                k:
                  type: integer
                  x-fern-audiences:
                    - public
                  description: >
                    Ensures only the top `k` most likely tokens are considered
                    for generation at each step.

                    Defaults to `0`, min value of `0`, max value of `500`.
                  writeOnly: true
                p:
                  type: number
                  x-fern-audiences:
                    - public
                  description: >
                    Ensures that only the most likely tokens, with total
                    probability mass of `p`, are considered for generation at
                    each step. If both `k` and `p` are enabled, `p` acts after
                    `k`.

                    Defaults to `0.75`. min value of `0.01`, max value of
                    `0.99`.
                  writeOnly: true
                frequency_penalty:
                  type: number
                  x-fern-audiences:
                    - public
                  description: >
                    Used to reduce repetitiveness of generated tokens. The
                    higher the value, the stronger a penalty is applied to
                    previously present tokens, proportional to how many times
                    they have already appeared in the prompt or prior
                    generation.


                    Using `frequency_penalty` in combination with
                    `presence_penalty` is not supported on newer models.
                  writeOnly: true
                presence_penalty:
                  type: number
                  x-fern-audiences:
                    - public
                  description: >
                    Defaults to `0.0`, min value of `0.0`, max value of `1.0`.


                    Can be used to reduce repetitiveness of generated tokens.
                    Similar to `frequency_penalty`, except that this penalty is
                    applied equally to all tokens that have already appeared,
                    regardless of their exact frequencies.


                    Using `frequency_penalty` in combination with
                    `presence_penalty` is not supported on newer models.
                  writeOnly: true
                return_likelihoods:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    One of `GENERATION|ALL|NONE` to specify how and if the token
                    likelihoods are returned with the response. Defaults to
                    `NONE`.


                    If `GENERATION` is selected, the token likelihoods will only
                    be provided for generated text.


                    If `ALL` is selected, the token likelihoods will be provided
                    both for the prompt and the generated text.
                  enum:
                    - GENERATION
                    - ALL
                    - NONE
                  default: NONE
                logit_bias:
                  type: object
                  x-fern-audiences:
                    - public
                  additionalProperties:
                    type: number
                    x-fern-audiences:
                      - public
                  description: >-
                    Certain models support the `logit_bias` parameter.


                    Used to prevent the model from generating unwanted tokens or
                    to incentivize it to include desired tokens. The format is
                    `{token_id: bias}` where bias is a float between -10 and 10.
                    Tokens can be obtained from text using
                    [Tokenize](/reference/tokenize).


                    For example, if the value `{'11': -10}` is provided, the
                    model will be very unlikely to include the token 11 (`"\n"`,
                    the newline character) anywhere in the generated text. In
                    contrast `{'11': 10}` will result in generations that nearly
                    only contain that token. Values between -10 and 10 will
                    proportionally affect the likelihood of the token appearing
                    in the generated text.
                  writeOnly: true
                raw_prompting:
                  type: boolean
                  x-fern-audiences:
                    - public
                  description: >-
                    When enabled, the user's prompt will be sent to the model
                    without any pre-processing.
              required:
                - prompt
              writeOnly: true
            examples:
              Example:
                value:
                  prompt: Please explain to me how LLMs work
        description: ""
  /embed:
    post:
      x-fern-audiences:
        - public
      summary: Embed
      operationId: embed
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      x-readme:
        samples-languages:
          - python
          - curl
          - node
        code-samples:
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const embed = await cohere.embed({
                    texts: ["hello", "goodbye"],
                    model: "embed-english-v3.0",
                    inputType: "classification",
                });
                console.log(embed);
              })();
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              response = co.embed(
                texts=['hello', 'goodbye'],
                model='embed-english-v3.0',
                input_type='classification'
              )
              print(response)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: "#/components/schemas/EmbedFloatsResponse"
                  - $ref: "#/components/schemas/EmbedByTypeResponse"
                discriminator:
                  propertyName: response_type
                  mapping:
                    embeddings_floats: "#/components/schemas/EmbedFloatsResponse"
                    embeddings_by_type: "#/components/schemas/EmbedByTypeResponse"
          headers:
            X-API-Warning:
              schema:
                type: string
                x-fern-audiences:
                  - public
              description: Warning description for incorrect usage of the API
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      description: >-
        This endpoint returns text embeddings. An embedding is a list of
        floating point numbers that captures semantic information about the text
        that it represents.


        Embeddings can be used to create text classifiers as well as empower
        semantic search. To learn more about embeddings, see the embedding page.


        If you want to learn more how to use the embedding model, have a look at
        the [Semantic Search Guide](/docs/semantic-search).
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-fern-audiences:
                - public
              properties:
                texts:
                  type: array
                  x-fern-audiences:
                    - public
                  minItems: 1
                  maxItems: 96
                  description: >-
                    An array of strings for the model to embed. Maximum number
                    of texts per call is `96`. We recommend reducing the length
                    of each text to be under `512` tokens for optimal quality.
                  items:
                    type: string
                    x-fern-audiences:
                      - public
                    writeOnly: true
                  writeOnly: true
                model:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    Defaults to embed-english-v2.0


                    The identifier of the model. Smaller "light" models are
                    faster, while larger models will perform better. [Custom
                    models](/docs/training-custom-models) can also be supplied
                    with their full ID.


                    Available models and corresponding embedding dimensions:


                    * `embed-english-v3.0`  1024

                    * `embed-multilingual-v3.0`  1024

                    * `embed-english-light-v3.0`  384

                    * `embed-multilingual-light-v3.0`  384


                    * `embed-english-v2.0`  4096

                    * `embed-english-light-v2.0`  1024

                    * `embed-multilingual-v2.0`  768
                  writeOnly: true
                input_type:
                  x-fern-audiences:
                    - public
                  $ref: "#/components/schemas/EmbedInputType"
                embedding_types:
                  type: array
                  x-fern-audiences:
                    - public
                  items:
                    type: string
                    x-fern-audiences:
                      - public
                    writeOnly: true
                    enum:
                      - float
                      - int8
                      - uint8
                      - binary
                      - ubinary
                  description: >-
                    Specifies the types of embeddings you want to get back. Not
                    required and default is None, which returns the Embed Floats
                    response type. Can be one or more of the following types.


                    * `"float"`: Use this when you want to get back the default
                    float embeddings. Valid for all models.

                    * `"int8"`: Use this when you want to get back signed int8
                    embeddings. Valid for only v3 models.

                    * `"uint8"`: Use this when you want to get back unsigned
                    int8 embeddings. Valid for only v3 models.

                    * `"binary"`: Use this when you want to get back signed
                    binary embeddings. Valid for only v3 models.

                    * `"ubinary"`: Use this when you want to get back unsigned
                    binary embeddings. Valid for only v3 models.
                  writeOnly: true
                truncate:
                  type: string
                  x-fern-audiences:
                    - public
                  default: END
                  enum:
                    - NONE
                    - START
                    - END
                  description: >-
                    One of `NONE|START|END` to specify how the API will handle
                    inputs longer than the maximum token length.


                    Passing `START` will discard the start of the input. `END`
                    will discard the end of the input. In both cases, input is
                    discarded until the remaining input is exactly the maximum
                    input token length for the model.


                    If `NONE` is selected, when the input exceeds the maximum
                    input token length an error will be returned.
                  writeOnly: true
              required:
                - texts
            examples:
              Example:
                value:
                  texts:
                    - hello
                    - goodbye
        description: ""
  /embed-jobs:
    post:
      x-fern-audiences:
        - public
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      summary: Create an Embed Job
      operationId: create-embed-job
      tags:
        - /embed-jobs
      x-fern-sdk-group-name: embed-jobs
      x-fern-sdk-method-name: create
      x-readme:
        samples-languages:
          - python
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              # start an embed job
              job = co.create_embed_job(
              dataset_id=ds.id,
              input_type='search_document',
              model='embed-english-v3.0')

              # poll the server until the job is complete
              job.wait()

              print(job)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const embedJob = await cohere.embedJobs.create({
                    datasetId: "my-dataset",
                    inputType: "search_document",
                    model: "embed-english-v3.0",
                });

                console.log(embedJob);
              })();
          - language: curl
            name: cURL
            code: |-
              curl --request POST \
                --url https://api.cohere.ai/v1/embed-jobs \
                --header 'Authorization: bearer <<apiKey>>' \
                --data '
                {
                  "model": "embed-english-v3.0",
                  "dataset_id": "my-dataset"
                }
                '
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateEmbedJobResponse"
          headers:
            X-API-Warning:
              schema:
                type: string
                x-fern-audiences:
                  - public
              description: Warning description for incorrect usage of the API
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      description: >-
        This API launches an async Embed job for a
        [Dataset](https://docs.cohere.com/docs/datasets) of type `embed-input`.
        The result of a completed embed job is new Dataset of type
        `embed-output`, which contains the original text entries and the
        corresponding embeddings.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEmbedJobRequest"
    get:
      x-fern-audiences:
        - public
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      summary: List Embed Jobs
      operationId: list-embed-jobs
      tags:
        - /embed-jobs
      x-fern-sdk-group-name: embed-jobs
      x-fern-sdk-method-name: list
      x-readme:
        samples-languages:
          - python
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              # list embed jobs
              my_embed_jobs = co.list_embed_jobs()

              print(my_embed_jobs)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const embedJobs = await cohere.embedJobs.list();

                console.log(embedJobs);
              })();
          - language: curl
            name: cURL
            code: |-
              curl --request GET \
                --url https://api.cohere.ai/v1/embed-jobs \
                --header 'Authorization: bearer <<apiKey>>'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEmbedJobResponse"
          headers:
            X-API-Warning:
              schema:
                type: string
                x-fern-audiences:
                  - public
              description: Warning description for incorrect usage of the API
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      description: >-
        The list embed job endpoint allows users to view all embed jobs history
        for that specific user.
  "/embed-jobs/{id}":
    get:
      x-fern-audiences:
        - public
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the embed job to retrieve.
          schema:
            type: string
            x-fern-audiences:
              - public
        - $ref: "#/components/parameters/RequestSource"
      summary: Fetch an Embed Job
      operationId: get-embed-job
      tags:
        - /embed-jobs
      x-fern-sdk-group-name: embed-jobs
      x-fern-sdk-method-name: get
      x-readme:
        samples-languages:
          - python
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              # get embed job
              my_embed_job = co.get_embed_job('job_id')

              print(my_embed_job)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const embedJob = await cohere.embedJobs.get("job_id");

                console.log(embedJob);
              })();
          - language: curl
            name: cURL
            code: |-
              curl
                --request GET \
                --url https://api.cohere.ai/v1/embed-jobs/{id} \
                --header 'Authorization: bearer <<apiKey>>'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmbedJob"
          headers:
            X-API-Warning:
              schema:
                type: string
                x-fern-audiences:
                  - public
              description: Warning message for potentially incorrect usage of the API
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      description: >-
        This API retrieves the details about an embed job started by the same
        user.
  "/embed-jobs/{id}/cancel":
    post:
      x-fern-audiences:
        - public
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the embed job to cancel.
          schema:
            type: string
            x-fern-audiences:
              - public
        - $ref: "#/components/parameters/RequestSource"
      summary: Cancel an Embed Job
      operationId: cancel-embed-job
      tags:
        - /embed-jobs
      x-fern-sdk-group-name: embed-jobs
      x-fern-sdk-method-name: cancel
      x-readme:
        samples-languages:
          - python
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              # cancel an embed job
              co.cancel_embed_job('job_id')
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const embedJob = await cohere.embedJobs.cancel("job_id");

                console.log(embedJob);
              })();
          - language: curl
            name: cURL
            code: |-
              curl
                --request POST \
                --url https://api.cohere.ai/v1/embed-jobs/{id}/cancel \
                --header 'Authorization: bearer <<apiKey>>'
      responses:
        "200":
          description: OK
          headers:
            X-API-Warning:
              schema:
                type: string
                x-fern-audiences:
                  - public
              description: Warning description for incorrect usage of the API
        "400":
          description: Bad Request
        "404":
          description: Not Found
        "500":
          description: Internal Server Error
      description: >-
        This API allows users to cancel an active embed job. Once invoked, the
        embedding process will be terminated, and users will be charged for the
        embeddings processed up to the cancellation point. It's important to
        note that partial results will not be available to users after
        cancellation.
  /rerank:
    post:
      x-fern-audiences:
        - public
      summary: Rerank
      operationId: rerank
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-fern-audiences:
                  - public
                properties:
                  id:
                    type: string
                    x-fern-audiences:
                      - public
                  results:
                    type: array
                    x-fern-audiences:
                      - public
                    description: An ordered list of ranked documents
                    items:
                      type: object
                      x-fern-audiences:
                        - public
                      properties:
                        document:
                          type: object
                          x-fern-audiences:
                            - public
                          description: The doc object which was ranked
                          properties:
                            text:
                              type: string
                              x-fern-audiences:
                                - public
                              description: The text of the document to rerank
                          required:
                            - text
                        index:
                          type: integer
                          x-fern-audiences:
                            - public
                          description: The index of the input document
                        relevance_score:
                          type: number
                          x-fern-audiences:
                            - public
                          format: float
                          description: A relevance score assigned to the ranking
                          readOnly: true
                      required:
                        - index
                        - relevance_score
                  meta:
                    $ref: "#/components/schemas/ApiMeta"
                    x-fern-audiences:
                      - public
                required:
                  - results
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-fern-audiences:
                - public
              properties:
                model:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    The identifier of the model to use, one of :
                    `rerank-english-v2.0`, `rerank-multilingual-v2.0`
                query:
                  type: string
                  x-fern-audiences:
                    - public
                  description: The search query
                documents:
                  type: array
                  x-fern-audiences:
                    - public
                  description: >-
                    A list of document objects or strings to rerank.

                    If a document is provided the text fields is required and
                    all other fields will be preserved in the response.


                    The total max chunks (length of documents *
                    max_chunks_per_doc) must be less than 10000.


                    We recommend a maximum of 1,000 documents for optimal
                    endpoint performance.
                  items:
                    oneOf:
                      - type: string
                      - type: object
                        properties:
                          text:
                            type: string
                            x-fern-audiences:
                              - public
                            description: The text of the document to rerank.
                        required:
                          - text
                top_n:
                  type: integer
                  x-fern-audiences:
                    - public
                  minimum: 1
                  description: >-
                    The number of most relevant documents or indices to return,
                    defaults to the length of the documents
                return_documents:
                  type: boolean
                  x-fern-audiences:
                    - public
                  default: false
                  description: >-
                    - If false, returns results without the doc text - the api
                    will return a list of {index, relevance score} where index
                    is inferred from the list passed into the request.

                    - If true, returns results with the doc text passed in - the
                    api will return an ordered list of {index, text, relevance
                    score} where index + text refers to the list passed into the
                    request.
                max_chunks_per_doc:
                  type: integer
                  x-fern-audiences:
                    - public
                  description: >-
                    The maximum number of chunks to produce internally from a
                    document
                  default: 10
              required:
                - query
                - documents
            examples:
              Example:
                value:
                  model: rerank-english-v2.0
                  query: What is the capital of the United States?
                  documents:
                    - >-
                      Carson City is the capital city of the American state of
                      Nevada.
                    - >-
                      The Commonwealth of the Northern Mariana Islands is a
                      group of islands in the Pacific Ocean. Its capital is
                      Saipan.
                    - >-
                      Washington, D.C. (also known as simply Washington or D.C.,
                      and officially as the District of Columbia) is the capital
                      of the United States. It is a federal district.
                    - >-
                      Capital punishment (the death penalty) has existed in the
                      United States since beforethe United States was a country.
                      As of 2017, capital punishment is legal in 30 of the 50
                      states.
        description: ""
      description: >-
        This endpoint takes in a query and a list of texts and produces an
        ordered array with each text assigned a relevance score.
      x-readme:
        samples-languages:
          - python
          - curl
          - node
        code-samples:
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const rerank = await cohere.rerank({
                    documents: [
                        { text: "Carson City is the capital city of the American state of Nevada."},
                        { text: "The Commonwealth of the Northern Mariana Islands is a group of islands in the Pacific Ocean. Its capital is Saipan."},
                        { text: "Washington, D.C. (also known as simply Washington or D.C., and officially as the District of Columbia) is the capital of the United States. It is a federal district."},
                        { text: "Capital punishment (the death penalty) has existed in the United States since beforethe United States was a country. As of 2017, capital punishment is legal in 30 of the 50 states."}
                    ],
                    query: "What is the capital of the United States?",
                    topN: 3,
                });

                console.log(rerank);
              })();
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: >-
              import cohere

              co = cohere.Client('<<apiKey>>')


              docs = ['Carson City is the capital city of the American state of
              Nevada.',

              'The Commonwealth of the Northern Mariana Islands is a group of
              islands in the Pacific Ocean. Its capital is Saipan.',

              'Washington, D.C. (also known as simply Washington or D.C., and
              officially as the District of Columbia) is the capital of the
              United States. It is a federal district.',

              'Capital punishment (the death penalty) has existed in the United
              States since beforethe United States was a country. As of 2017,
              capital punishment is legal in 30 of the 50 states.']


              response = co.rerank(
                model = 'rerank-english-v2.0',
                query = 'What is the capital of the United States?',
                documents = docs,
                top_n = 3,
              )

              print(response)
  /classify:
    post:
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      x-fern-audiences:
        - public
      summary: Classify
      operationId: classify
      x-readme:
        samples-languages:
          - python
          - curl
          - node
        code-samples:
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const classify = await cohere.classify({
                    examples: [
                        { text: "Dermatologists don't like her!", label: "Spam" },
                        { text: "'Hello, open to this?'", label: "Spam" },
                        { text: "I need help please wire me $1000 right now", label: "Spam" },
                        { text: "Nice to know you ;)", label: "Spam" },
                        { text: "Please help me?", label: "Spam" },
                        { text: "Your parcel will be delivered today", label: "Not spam" },
                        { text: "Review changes to our Terms and Conditions", label: "Not spam" },
                        { text: "Weekly sync notes", label: "Not spam" },
                        { text: "'Re: Follow up from today's meeting'", label: "Not spam" },
                        { text: "Pre-read for tomorrow", label: "Not spam" },
                    ],
                    inputs: [
                        "Confirm your email address",
                        "hey i need u to send some $",
                    ],
                })

                console.log(classify);
              })();
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              from cohere.responses.classify import Example
              co = cohere.Client('<<apiKey>>')
              examples=[
                Example("Dermatologists don't like her!", "Spam"),
                Example("'Hello, open to this?'", "Spam"),
                Example("I need help please wire me $1000 right now", "Spam"),
                Example("Nice to know you ;)", "Spam"),
                Example("Please help me?", "Spam"),
                Example("Your parcel will be delivered today", "Not spam"),
                Example("Review changes to our Terms and Conditions", "Not spam"),
                Example("Weekly sync notes", "Not spam"),
                Example("'Re: Follow up from today's meeting'", "Not spam"),
                Example("Pre-read for tomorrow", "Not spam"),
              ]
              inputs=[
                "Confirm your email address",
                "hey i need u to send some $",
              ]
              response = co.classify(
                inputs=inputs,
                examples=examples,
              )
              print(response)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                x-fern-audiences:
                  - public
                x-examples:
                  Example:
                    id: ca245541-8841-456e-b306-293370789a30
                    classifications:
                      - id: c50ab0d9-95d8-44de-ba90-9647a1718744
                        input: Confirm your email address
                        prediction: Not spam
                        predictions:
                          - Not spam
                        confidence: 0.7581943
                        confidences:
                          - 0.7581943
                        labels:
                          Not spam:
                            confidence: 0.7581943
                          Spam:
                            confidence: 0.24180566
                        classification_type: single-label
                      - id: 8a841de2-027f-49d4-8c91-e88fa1865b89
                        input: hey i need u to send some $
                        prediction: Spam
                        predictions:
                          - Spam
                        confidence: 0.9965721
                        confidences:
                          - 0.9965721
                        labels:
                          Not spam:
                            confidence: 0.0034279241
                          Spam:
                            confidence: 0.9965721
                        classification_type: single-label
                properties:
                  id:
                    type: string
                    x-fern-audiences:
                      - public
                    readOnly: true
                  classifications:
                    type: array
                    x-fern-audiences:
                      - public
                    items:
                      type: object
                      x-fern-audiences:
                        - public
                      properties:
                        id:
                          type: string
                          x-fern-audiences:
                            - public
                          readOnly: true
                        input:
                          type: string
                          x-fern-audiences:
                            - public
                          description: The input text that was classified
                          readOnly: true
                        prediction:
                          type: string
                          x-fern-audiences:
                            - public
                          description: >-
                            The predicted label for the associated query (only
                            filled for single-label models)
                          readOnly: true
                          deprecated: true
                        predictions:
                          type: array
                          x-fern-audiences:
                            - public
                          items:
                            type: string
                            x-fern-audiences:
                              - public
                          description: >-
                            An array containing the predicted labels for the
                            associated query (only filled for single-label
                            classification)
                          readOnly: true
                        confidence:
                          type: number
                          x-fern-audiences:
                            - public
                          format: float
                          description: >-
                            The confidence score for the top predicted class
                            (only filled for single-label classification)
                          readOnly: true
                          deprecated: true
                        confidences:
                          type: array
                          x-fern-audiences:
                            - public
                          items:
                            type: number
                            x-fern-audiences:
                              - public
                            format: float
                          description: >-
                            An array containing the confidence scores of all the
                            predictions in the same order
                          readOnly: true
                        labels:
                          type: object
                          x-fern-audiences:
                            - public
                          additionalProperties:
                            type: object
                            x-fern-audiences:
                              - public
                            properties:
                              confidence:
                                type: number
                                x-fern-audiences:
                                  - public
                                format: float
                                readOnly: true
                            readOnly: true
                          description: >-
                            A map containing each label and its confidence score
                            according to the classifier. All the confidence
                            scores add up to 1 for single-label classification.
                            For multi-label classification the label confidences
                            are independent of each other, so they don't have to
                            sum up to 1.
                          readOnly: true
                        classification_type:
                          type: string
                          x-fern-audiences:
                            - public
                          enum:
                            - single-label
                            - multi-label
                          description: The type of classification performed
                          readOnly: true
                      required:
                        - id
                        - predictions
                        - confidences
                        - labels
                        - classification_type
                      readOnly: true
                    readOnly: true
                  meta:
                    $ref: "#/components/schemas/ApiMeta"
                    x-fern-audiences:
                      - public
                required:
                  - id
                  - classifications
              examples:
                Example:
                  value:
                    id: ca245541-8841-456e-b306-293370789a30
                    classifications:
                      - id: c50ab0d9-95d8-44de-ba90-9647a1718744
                        input: Confirm your email address
                        prediction: Not spam
                        predictions:
                          - Not spam
                        confidence: 0.7581943
                        confidences:
                          - 0.7581943
                        labels:
                          Not spam:
                            confidence: 0.7581943
                          Spam:
                            confidence: 0.24180566
                        classification_type: single-label
                      - id: 8a841de2-027f-49d4-8c91-e88fa1865b89
                        input: hey i need u to send some $
                        prediction: Spam
                        predictions:
                          - Spam
                        confidence: 0.9965721
                        confidences:
                          - 0.9965721
                        labels:
                          Not spam:
                            confidence: 0.0034279241
                          Spam:
                            confidence: 0.9965721
                        classification_type: single-label
                    meta:
                      api_version:
                        version: "1"
          headers:
            X-API-Warning:
              schema:
                type: string
                x-fern-audiences:
                  - public
              description: Warning description for incorrect usage of the API
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      description: >-
        This endpoint makes a prediction about which label fits the specified
        text inputs best. To make a prediction, Classify uses the provided
        `examples` of text + label pairs as a reference.

        Note: [Fine-tuned
        models](https://docs.cohere.com/docs/classify-fine-tuning) trained on
        classification examples don't require the `examples` parameter to be
        passed in explicitly.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-fern-audiences:
                - public
              x-examples:
                Example:
                  inputs:
                    - Confirm your email address
                    - hey i need u to send some $
                  examples:
                    - text: Dermatologists don't like her!
                      label: Spam
                    - text: "Hello, open to this?"
                      label: Spam
                    - text: I need help please wire me $1000 right now
                      label: Spam
                    - text: Nice to know you ;)
                      label: Spam
                    - text: Please help me?
                      label: Spam
                    - text: Your parcel will be delivered today
                      label: Not spam
                    - text: Review changes to our Terms and Conditions
                      label: Not spam
                    - text: Weekly sync notes
                      label: Not spam
                    - text: "Re: Follow up from today’s meeting"
                      label: Not spam
                    - text: Pre-read for tomorrow
                      label: Not spam
              properties:
                inputs:
                  type: array
                  x-fern-audiences:
                    - public
                  maxItems: 96
                  description: >-
                    A list of up to 96 texts to be classified. Each one must be
                    a non-empty string.

                    There is, however, no consistent, universal limit to the
                    length a particular input can be. We perform classification
                    on the first `x` tokens of each input, and `x` varies
                    depending on which underlying model is powering
                    classification. The maximum token length for each model is
                    listed in the "max tokens" column
                    [here](https://docs.cohere.com/docs/models).

                    Note: by default the `truncate` parameter is set to `END`,
                    so tokens exceeding the limit will be automatically dropped.
                    This behavior can be disabled by setting `truncate` to
                    `NONE`, which will result in validation errors for longer
                    texts.
                  items:
                    type: string
                    x-fern-audiences:
                      - public
                    writeOnly: true
                  writeOnly: true
                examples:
                  type: array
                  x-fern-audiences:
                    - public
                  description: >-
                    An array of examples to provide context to the model. Each
                    example is a text string and its associated label/class.
                    Each unique label requires at least 2 examples associated
                    with it; the maximum number of examples is 2500, and each
                    example has a maximum length of 512 tokens. The values
                    should be structured as `{text: "...",label: "..."}`.

                    Note: [Fine-tuned
                    Models](https://docs.cohere.com/docs/classify-fine-tuning)
                    trained on classification examples don't require the
                    `examples` parameter to be passed in explicitly.
                  maxItems: 2500
                  items:
                    x-fern-audiences:
                      - public
                    $ref: "#/components/schemas/ClassifyExample"
                  writeOnly: true
                model:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    The identifier of the model. Currently available models are
                    `embed-multilingual-v2.0`, `embed-english-light-v2.0`, and
                    `embed-english-v2.0` (default). Smaller "light" models are
                    faster, while larger models will perform better. [Fine-tuned
                    models](https://docs.cohere.com/docs/fine-tuning) can also
                    be supplied with their full ID.
                  writeOnly: true
                preset:
                  type: string
                  x-fern-audiences:
                    - public
                  example: my-preset-a58sbd
                  description: >-
                    The ID of a custom playground preset. You can create presets
                    in the
                    [playground](https://dashboard.cohere.ai/playground/classify?model=large).
                    If you use a preset, all other parameters become optional,
                    and any included parameters will override the preset's
                    parameters.
                  writeOnly: true
                truncate:
                  type: string
                  x-fern-audiences:
                    - public
                  default: END
                  enum:
                    - NONE
                    - START
                    - END
                  description: >-
                    One of `NONE|START|END` to specify how the API will handle
                    inputs longer than the maximum token length.

                    Passing `START` will discard the start of the input. `END`
                    will discard the end of the input. In both cases, input is
                    discarded until the remaining input is exactly the maximum
                    input token length for the model.

                    If `NONE` is selected, when the input exceeds the maximum
                    input token length an error will be returned.
                  writeOnly: true
              required:
                - inputs
                - examples
            examples:
              Example:
                value:
                  inputs:
                    - Confirm your email address
                    - hey i need u to send some $
                  examples:
                    - text: Dermatologists don't like her!
                      label: Spam
                    - text: "Hello, open to this?"
                      label: Spam
                    - text: I need help please wire me $1000 right now
                      label: Spam
                    - text: Nice to know you ;)
                      label: Spam
                    - text: Please help me?
                      label: Spam
                    - text: Your parcel will be delivered today
                      label: Not spam
                    - text: Review changes to our Terms and Conditions
                      label: Not spam
                    - text: Weekly sync notes
                      label: Not spam
                    - text: "Re: Follow up from today’s meeting"
                      label: Not spam
                    - text: Pre-read for tomorrow
                      label: Not spam
        description: ""
  /datasets:
    post:
      x-fern-audiences:
        - public
      summary: Create a Dataset
      operationId: create-dataset
      description: >-
        Create a dataset by uploading a file. See ['Dataset
        Creation'](https://docs.cohere.com/docs/datasets#dataset-creation) for
        more information.
      tags:
        - /datasets
      x-fern-sdk-group-name: datasets
      x-fern-sdk-method-name: create
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              x-fern-audiences:
                - public
              properties:
                data:
                  type: string
                  x-fern-audiences:
                    - public
                  format: binary
                  description: The file to upload
                eval_data:
                  type: string
                  x-fern-audiences:
                    - public
                  format: binary
                  required: false
                  description: An optional evaluation file to upload
      parameters:
        - in: query
          name: name
          schema:
            type: string
            x-fern-audiences:
              - public
          description: The name of the uploaded dataset.
        - in: query
          name: type
          schema:
            $ref: "#/components/schemas/DatasetType"
          description: "The dataset type, which is used to validate the data."
        - in: query
          name: keep_original_file
          schema:
            type: boolean
            x-fern-audiences:
              - public
          description: Indicates if the original file should be stored.
        - in: query
          name: skip_malformed_input
          schema:
            type: boolean
            x-fern-audiences:
              - public
          description: >-
            Indicates whether rows with malformed input should be dropped
            (instead of failing the validation check). Dropped rows will be
            returned in the warnings field.
        - in: query
          name: keep_fields
          schema:
            type: array
            items:
              type: string
              x-fern-audiences:
                - public
          description: >-
            List of names of fields that will be persisted in the Dataset. By
            default the Dataset will retain only the required fields indicated
            in the [schema for the corresponding Dataset
            type](https://docs.cohere.com/docs/datasets#dataset-types). For
            example, datasets of type `embed-input` will drop all fields other
            than the required `text` field. If any of the fields in
            `keep_fields` are missing from the uploaded file, Dataset validation
            will fail.
        - in: query
          name: optional_fields
          schema:
            type: array
            items:
              type: string
              x-fern-audiences:
                - public
          description: >-
            List of names of fields that will be persisted in the Dataset. By
            default the Dataset will retain only the required fields indicated
            in the [schema for the corresponding Dataset
            type](https://docs.cohere.com/docs/datasets#dataset-types). For
            example, Datasets of type `embed-input` will drop all fields other
            than the required `text` field. If any of the fields in
            `optional_fields` are missing from the uploaded file, Dataset
            validation will pass.
        - in: query
          name: text_separator
          schema:
            type: string
            x-fern-audiences:
              - public
          description: >-
            Raw .txt uploads will be split into entries using the text_separator
            value.
        - in: query
          name: csv_delimiter
          schema:
            type: string
            x-fern-audiences:
              - public
          description: The delimiter used for .csv uploads.
        - $ref: "#/components/parameters/RequestSource"
      x-readme:
        samples-languages:
          - python
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              # upload a dataset
              my_dataset = co.create_dataset(
                name="prompt-completion-dataset",
                data=open("./prompt-completion.jsonl", "rb"),
                dataset_type="prompt-completion-finetune-input")

              # wait for validation to complete
              my_dataset.await_validation()

              print(my_dataset)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");
              const fs = require("fs");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const file = fs.createReadStream("embed_jobs_sample_data.jsonl") // {"text": "The quick brown fox jumps over the lazy dog"}

                const dataset = await cohere.datasets.create(
                    { name: "my-dataset", type: "embed-input" },
                    file,
                );

                console.log(dataset);
              })();
          - language: curl
            name: cURL
            code: |-
              curl
                --request POST \
                --url 'https://api.cohere.ai/v1/datasets?name=my-dataset&type=generative-finetune-input' \
                --header 'Authorization: bearer <<apiKey>>' \
                --header 'Content-Type: multipart/form-data' \
                --form file=@/path/to/file.jsonl
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                x-fern-audiences:
                  - public
                properties:
                  id:
                    type: string
                    x-fern-audiences:
                      - public
                    description: The dataset ID
    get:
      x-fern-audiences:
        - public
      summary: List Datasets
      operationId: list-datasets
      description: List datasets that have been created.
      tags:
        - /datasets
      x-fern-sdk-group-name: datasets
      x-fern-sdk-method-name: list
      parameters:
        - name: datasetType
          in: query
          description: optional filter by dataset type
          schema:
            type: string
            x-fern-audiences:
              - public
        - name: before
          in: query
          description: optional filter before a date
          schema:
            type: string
            x-fern-audiences:
              - public
            format: date-time
        - name: after
          in: query
          description: optional filter after a date
          schema:
            type: string
            x-fern-audiences:
              - public
            format: date-time
        - name: limit
          in: query
          description: optional limit to number of results
          schema:
            type: string
            x-fern-audiences:
              - public
            format: int64
        - name: offset
          in: query
          description: optional offset to start of results
          schema:
            type: string
            x-fern-audiences:
              - public
            format: int64
        - $ref: "#/components/parameters/RequestSource"
      x-readme:
        samples-languages:
          - python
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              # list datasets
              my_datasets = co.list_datasets()

              print(my_datasets)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const datasets = await cohere.datasets.list();

                console.log(datasets);
              })();
          - language: curl
            name: cURL
            code: |-
              curl
                --request GET \
                --url 'https://api.cohere.ai/v1/datasets' \
                --header 'Authorization: bearer <<apiKey>>'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                x-fern-audiences:
                  - public
                properties:
                  datasets:
                    type: array
                    x-fern-audiences:
                      - public
                    items:
                      $ref: "#/components/schemas/Dataset"
  /datasets/usage:
    get:
      x-fern-audiences:
        - public
      summary: Get Dataset Usage
      operationId: get-dataset-usage
      description: >-
        View the dataset storage usage for your Organization. Each Organization
        can have up to 10GB of storage across all their users.
      tags:
        - /datasets
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      x-fern-sdk-group-name: datasets
      x-fern-sdk-method-name: getUsage
      x-readme:
        samples-languages:
          - python
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              # get usage
              dataset_usage = co.get_dataset_usage()

              print(dataset_usage)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const usage = await cohere.datasets.getUsage("id");

                console.log(usage);
              })();
          - language: curl
            name: cURL
            code: |-
              curl
                --request GET \
                --url 'https://api.cohere.ai/v1/datasets/usage' \
                --header 'Authorization: bearer <<apiKey>>'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                x-fern-audiences:
                  - public
                properties:
                  organization_usage:
                    type: string
                    x-fern-audiences:
                      - public
                    format: int64
                    description: The total number of bytes used by the organization.
  "/datasets/{id}":
    get:
      x-fern-audiences:
        - public
      summary: Get a Dataset
      operationId: get-dataset
      description: >-
        Retrieve a dataset by ID. See
        ['Datasets'](https://docs.cohere.com/docs/datasets) for more
        information.
      tags:
        - /datasets
      x-fern-sdk-group-name: datasets
      x-fern-sdk-method-name: get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            x-fern-audiences:
              - public
            pattern: ^(?!usage$).*$
        - $ref: "#/components/parameters/RequestSource"
      x-readme:
        samples-languages:
          - python
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              # get dataset
              my_dataset = co.get_dataset('id')

              print(my_dataset)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const dataset = await cohere.datasets.get("id");

                console.log(dataset);
              })();
          - language: curl
            name: cURL
            code: |-
              curl
                --request GET \
                --url 'https://api.cohere.ai/v1/datasets/{id}' \
                --header 'Authorization: bearer <<apiKey>>'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                x-fern-audiences:
                  - public
                required:
                  - dataset
                properties:
                  dataset:
                    $ref: "#/components/schemas/Dataset"
    delete:
      x-fern-audiences:
        - public
      summary: Delete a Dataset
      operationId: delete-dataset
      description: >-
        Delete a dataset by ID. Datasets are automatically deleted after 30
        days, but they can also be deleted manually.
      tags:
        - /datasets
      x-fern-sdk-group-name: datasets
      x-fern-sdk-method-name: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            x-fern-audiences:
              - public
            pattern: ^(?!usage$).*$
        - $ref: "#/components/parameters/RequestSource"
      x-readme:
        samples-languages:
          - python
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              # delete dataset
              co.delete_dataset('id')
          - language: curl
            name: cURL
            code: |-
              curl
                --request DELETE \
                --url 'https://api.cohere.ai/v1/datasets/{id}' \
                --header 'Authorization: bearer <<apiKey>>'
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                type: object
                x-fern-audiences:
                  - public
  /summarize:
    post:
      x-fern-audiences:
        - public
      summary: Summarize
      operationId: summarize
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      x-readme:
        samples-languages:
          - python
          - curl
          - node
        code-samples:
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const summarize = await cohere.summarize({
                    text: "Ice cream is a sweetened frozen food typically eaten as a snack or dessert. "
                        + "It may be made from milk or cream and is flavoured with a sweetener, "
                        + "either sugar or an alternative, and a spice, such as cocoa or vanilla, "
                        + "or with fruit such as strawberries or peaches. "
                        + "It can also be made by whisking a flavored cream base and liquid nitrogen together. "
                        + "Food coloring is sometimes added, in addition to stabilizers. "
                        + "The mixture is cooled below the freezing point of water and stirred to incorporate air spaces "
                        + "and to prevent detectable ice crystals from forming. The result is a smooth, "
                        + "semi-solid foam that is solid at very low temperatures (below 2 °C or 35 °F). "
                        + "It becomes more malleable as its temperature increases.\n\n"
                        + "The meaning of the name \"icecream\" varies from one country to another. "
                        + "In some countries, such as the United States, \"icecream\" applies only to a specific variety, "
                        + "and most governments regulate the commercial use of the various terms according to the "
                        + "relative quantities of the main ingredients, notably the amount of cream. "
                        + "Products that do not meet the criteria to be called ice cream are sometimes labelled "
                        + "\"frozendairydessert\" instead. In other countries, such as Italy and Argentina, "
                        + "one word is used fo\r all variants. Analogues made from dairy alternatives, "
                        + "such as goat's or sheep's milk, or milk substitutes "
                        + "(e.g., soy, cashew, coconut, almond milk or tofu), are available for those who are "
                        + "lactose intolerant, allergic to dairy protein or vegan.",
                });

                console.log(summarize);
              })();
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              text=(
                "Ice cream is a sweetened frozen food typically eaten as a snack or dessert. "
                "It may be made from milk or cream and is flavoured with a sweetener, "
                "either sugar or an alternative, and a spice, such as cocoa or vanilla, "
                "or with fruit such as strawberries or peaches. "
                "It can also be made by whisking a flavored cream base and liquid nitrogen together. "
                "Food coloring is sometimes added, in addition to stabilizers. "
                "The mixture is cooled below the freezing point of water and stirred to incorporate air spaces "
                "and to prevent detectable ice crystals from forming. The result is a smooth, "
                "semi-solid foam that is solid at very low temperatures (below 2 °C or 35 °F). "
                "It becomes more malleable as its temperature increases.\n\n"
                "The meaning of the name \"icecream\" varies from one country to another. "
                "In some countries, such as the United States, \"icecream\" applies only to a specific variety, "
                "and most governments regulate the commercial use of the various terms according to the "
                "relative quantities of the main ingredients, notably the amount of cream. "
                "Products that do not meet the criteria to be called ice cream are sometimes labelled "
                "\"frozendairydessert\" instead. In other countries, such as Italy and Argentina, "
                "one word is used fo\r all variants. Analogues made from dairy alternatives, "
                "such as goat's or sheep's milk, or milk substitutes "
                "(e.g., soy, cashew, coconut, almond milk or tofu), are available for those who are "
                "lactose intolerant, allergic to dairy protein or vegan."
              )

              response = co.summarize(
                text=text,
              )
              print(response)
      responses:
        "200":
          description: OK
          headers:
            X-API-Warning:
              schema:
                type: string
                x-fern-audiences:
                  - public
              description: Warning description for incorrect usage of the API
          content:
            application/json:
              schema:
                type: object
                x-fern-audiences:
                  - public
                properties:
                  id:
                    type: string
                    x-fern-audiences:
                      - public
                    description: Generated ID for the summary
                  summary:
                    type: string
                    x-fern-audiences:
                      - public
                    description: Generated summary for the text
                  meta:
                    $ref: "#/components/schemas/ApiMeta"
                    x-fern-audiences:
                      - public
      description: This endpoint generates a summary in English for a given text.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-fern-audiences:
                - public
              properties:
                text:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    The text to generate a summary for. Can be up to 100,000
                    characters long. Currently the only supported language is
                    English.
                  minLength: 250
                  maxLength: 50000
                  writeOnly: true
                length:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    One of `short`, `medium`, `long`, or `auto` defaults to
                    `auto`. Indicates the approximate length of the summary. If
                    `auto` is selected, the best option will be picked based on
                    the input text.
                  default: medium
                  enum:
                    - short
                    - medium
                    - long
                  writeOnly: true
                format:
                  type: string
                  x-fern-audiences:
                    - public
                  default: paragraph
                  enum:
                    - paragraph
                    - bullets
                  description: >-
                    One of `paragraph`, `bullets`, or `auto`, defaults to
                    `auto`. Indicates the style in which the summary will be
                    delivered - in a free form paragraph or in bullet points. If
                    `auto` is selected, the best option will be picked based on
                    the input text.
                  writeOnly: true
                model:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    The identifier of the model to generate the summary with.
                    Currently available models are `command` (default),
                    `command-nightly` (experimental), `command-light`, and
                    `command-light-nightly` (experimental). Smaller, "light"
                    models are faster, while larger models will perform better.
                  writeOnly: true
                extractiveness:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    One of `low`, `medium`, `high`, or `auto`, defaults to
                    `auto`. Controls how close to the original text the summary
                    is. `high` extractiveness summaries will lean towards
                    reusing sentences verbatim, while `low` extractiveness
                    summaries will tend to paraphrase more. If `auto` is
                    selected, the best option will be picked based on the input
                    text.
                  default: low
                  enum:
                    - low
                    - medium
                    - high
                  writeOnly: true
                temperature:
                  type: number
                  x-fern-audiences:
                    - public
                  description: >-
                    Ranges from 0 to 5. Controls the randomness of the output.
                    Lower values tend to generate more “predictable” output,
                    while higher values tend to generate more “creative” output.
                    The sweet spot is typically between 0 and 1.
                  default: 0.3
                  minimum: 0
                  maximum: 5
                  writeOnly: true
                additional_command:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    A free-form instruction for modifying how the summaries get
                    generated. Should complete the sentence "Generate a summary
                    _". Eg. "focusing on the next steps" or "written by Yoda"
                  writeOnly: true
              required:
                - text
            examples:
              Example:
                value:
                  text: "Ice cream is a sweetened frozen food typically eaten as a snack or dessert. It may be made from milk or cream and is flavoured with a sweetener, either sugar or an alternative, and a spice, such as cocoa or vanilla, or with fruit such as strawberries or peaches. It can also be made by whisking a flavored cream base and liquid nitrogen together. Food coloring is sometimes added, in addition to stabilizers. The mixture is cooled below the freezing point of water and stirred to incorporate air spaces and to prevent detectable ice crystals from forming. The result is a smooth, semi-solid foam that is solid at very low temperatures (below 2 °C or 35 °F). It becomes more malleable as its temperature increases.\n\nThe meaning of the name \"ice cream\" varies from one country to another. In some countries, such as the United States, \"ice cream\" applies only to a specific variety, and most governments regulate the commercial use of the various terms according to the relative quantities of the main ingredients, notably the amount of cream. Products that do not meet the criteria to be called ice cream are sometimes labelled \"frozen dairy dessert\" instead. In other countries, such as Italy and Argentina, one word is used fo\r all variants. Analogues made from dairy alternatives, such as goat's or sheep's milk, or milk substitutes (e.g., soy, cashew, coconut, almond milk or tofu), are available for those who are lactose intolerant, allergic to dairy protein or vegan."
        description: ""
  /tokenize:
    post:
      x-fern-audiences:
        - public
      summary: Tokenize
      operationId: tokenize
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      x-readme:
        samples-languages:
          - python
          - curl
          - node
        code-samples:
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const tokenize = await cohere.tokenize({
                    text: "tokenize me! :D",
                    model: "command",
                });

                console.log(tokenize);
              })();
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              response = co.tokenize(
                text='tokenize me! :D',
                model='command' # optional
              )
              print(response)
          - language: node
            name: Cohere Node.js SDK
            install: npm install cohere-ai
            code: |-
              const cohere = require('cohere-ai');
              cohere.init('<<apiKey>>')

              (async () => {
                const response = await cohere.tokenize({
                  text: 'tokenize me! :D',
                  model: 'command' // optional
                });
                console.log(response);
              })();
          - language: go
            name: Cohere Go SDK
            install: go get github.com/cohere-ai/cohere-go
            code: |-
              package main

              import (
                "fmt"
                cohere "github.com/cohere-ai/cohere-go"
              )

              func main() {
                co, err := cohere.CreateClient("<<apiKey>>")
                if err != nil {
                  fmt.Println(err)
                  return
                }

                response, err := co.Tokenize(cohere.TokenizeOptions{
                  Text: "tokenize me! :D",
                })
                if err != nil {
                  fmt.Println(err)
                  return
                }
                fmt.Println(response)
              }
      responses:
        "200":
          description: OK
          headers:
            X-API-Warning:
              schema:
                type: string
                x-fern-audiences:
                  - public
              description: Warning description for incorrect usage of the API
          content:
            application/json:
              schema:
                type: object
                x-fern-audiences:
                  - public
                properties:
                  tokens:
                    type: array
                    x-fern-audiences:
                      - public
                    description: "An array of tokens, where each token is an integer."
                    items:
                      type: integer
                      x-fern-audiences:
                        - public
                      readOnly: true
                    readOnly: true
                  token_strings:
                    type: array
                    x-fern-audiences:
                      - public
                    items:
                      type: string
                      x-fern-audiences:
                        - public
                  meta:
                    $ref: "#/components/schemas/ApiMeta"
                    x-fern-audiences:
                      - public
                required:
                  - tokens
                  - token_strings
              examples:
                Example:
                  value:
                    tokens:
                      - 34160
                      - 974
                      - 514
                      - 34
                      - 1420
                      - 69
                    token_strings:
                      - token
                      - ize'
                      - " me"
                      - "!"
                      - " :"
                      - D
                    meta:
                      api_version:
                        version: "1"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      description: >-
        This endpoint splits input text into smaller units called tokens using
        byte-pair encoding (BPE). To learn more about tokenization and byte pair
        encoding, see the tokens page.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-fern-audiences:
                - public
              properties:
                text:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    The string to be tokenized, the minimum text length is 1
                    character, and the maximum text length is 65536 characters.
                  minLength: 1
                  maxLength: 65536
                model:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    An optional parameter to provide the model name. This will
                    ensure that the tokenization uses the tokenizer used by that
                    model.
              required:
                - text
            examples:
              Example:
                value:
                  text: "tokenize me! :D"
                  model: command
        description: ""
  /detokenize:
    post:
      x-fern-audiences:
        - public
      summary: Detokenize
      operationId: detokenize
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      x-readme:
        samples-languages:
          - python
          - curl
          - node
        code-samples:
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const detokenize = await cohere.detokenize({
                    tokens: [ 10002, 2261, 2012, 8, 2792, 43 ],
                    model: "command",
                });

                console.log(detokenize);
              })();
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')

              response = co.detokenize(
                tokens=[10104, 12221, 1315, 34, 1420, 69],
                model="command" # optional
              )
              print(response)
      responses:
        "200":
          description: OK
          headers:
            X-API-Warning:
              schema:
                type: string
                x-fern-audiences:
                  - public
              description: Warning description for incorrect usage of the API
          content:
            application/json:
              schema:
                type: object
                x-fern-audiences:
                  - public
                properties:
                  text:
                    type: string
                    x-fern-audiences:
                      - public
                    description: A string representing the list of tokens.
                    readOnly: true
                  meta:
                    $ref: "#/components/schemas/ApiMeta"
                    x-fern-audiences:
                      - public
                required:
                  - text
              examples:
                Example:
                  value:
                    text: "detokenized! :D"
                    meta:
                      api_version:
                        version: "1"
      description: >-
        This endpoint takes tokens using byte-pair encoding and returns their
        text representation. To learn more about tokenization and byte pair
        encoding, see the tokens page.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              x-fern-audiences:
                - public
              properties:
                tokens:
                  type: array
                  x-fern-audiences:
                    - public
                  description: The list of tokens to be detokenized.
                  minItems: 1
                  maxItems: 65536
                  items:
                    type: integer
                    x-fern-audiences:
                      - public
                  writeOnly: true
                model:
                  type: string
                  x-fern-audiences:
                    - public
                  description: >-
                    An optional parameter to provide the model name. This will
                    ensure that the detokenization is done by the tokenizer used
                    by that model.
              required:
                - tokens
            examples:
              Example:
                value:
                  tokens:
                    - 10104
                    - 12221
                    - 1315
                    - 34
                    - 1420
                    - 69
        description: ""
    parameters: []
  /connectors:
    get:
      x-fern-audiences:
        - public
      summary: List Connectors
      tags:
        - /connectors
      operationId: list-connectors
      x-fern-sdk-method-name: list
      x-fern-sdk-group-name: connectors
      description: >-
        Returns a list of connectors ordered by descending creation date (newer
        first). See ['Managing your
        Connector'](https://docs.cohere.com/docs/managing-your-connector) for
        more information.
      parameters:
        - name: limit
          in: query
          description: "Maximum number of connectors to return [0, 100]."
          schema:
            default: 30
            type: number
            x-fern-audiences:
              - public
        - name: offset
          in: query
          description: "Number of connectors to skip before returning results [0, inf]."
          schema:
            default: 0
            type: number
            x-fern-audiences:
              - public
        - $ref: "#/components/parameters/RequestSource"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConnectorsResponse"
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      x-readme:
        samples-languages:
          - python
          - node
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere --upgrade
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')
              connectors = co.list_connectors()
              print(connectors)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const connectors = await cohere.connectors.list();

                console.log(connectors);
              })();
    post:
      x-fern-audiences:
        - public
      summary: Create a Connector
      tags:
        - /connectors
      operationId: create-connector
      x-fern-sdk-method-name: create
      x-fern-sdk-group-name: connectors
      description: >-
        Creates a new connector. The connector is tested during registration and
        will cancel registration when the test is unsuccessful. See ['Creating
        and Deploying a
        Connector'](https://docs.cohere.com/docs/creating-and-deploying-a-connector)
        for more information.
      parameters:
        - $ref: "#/components/parameters/RequestSource"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateConnectorRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateConnectorResponse"
        "400":
          description: Bad Request. The connector test might have failed.
        "403":
          description: Forbidden Error
        "500":
          description: Internal Server Error
      x-readme:
        samples-languages:
          - python
          - node
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere --upgrade
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')
              created_connector = co.create_connector(
                name="Example connector",
                url="https://connector-example.com/search",
              )
              print(created_connector)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const connector = await cohere.connectors.create({
                  name: "test-connector",
                  url: "https://example.com/search",
                  description: "A test connector"
                });

                console.log(connector);
              })();
          - language: curl
            name: Curl
            code: |-
              curl --request POST \
                --url https://api.cohere.ai/v1/connectors \
                --header 'accept: application/json' \
                --header 'content-type: application/json' \
                --header 'Authorization: Bearer <<apiKey>>' \
                --data '
              {
                "name": "Example connector",
                "url": "https://connector-example.com/search"
              }
              '
  "/connectors/{id}":
    get:
      x-fern-audiences:
        - public
      summary: Get a Connector
      tags:
        - /connectors
      description: >-
        Retrieve a connector by ID. See
        ['Connectors'](https://docs.cohere.com/docs/connectors) for more
        information.
      operationId: get-connector
      x-fern-sdk-method-name: get
      x-fern-sdk-group-name: connectors
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the connector to retrieve.
          schema:
            type: string
            x-fern-audiences:
              - public
        - $ref: "#/components/parameters/RequestSource"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetConnectorResponse"
        "400":
          description: Bad Request
        "404":
          description: Not Found Error
        "500":
          description: Internal Server Error
      x-readme:
        samples-languages:
          - python
          - node
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere --upgrade
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')
              connector = co.get_connector("test-id")
              print(connector)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const connector = await cohere.connectors.get("connector-id");

                console.log(connector);
              })();
    patch:
      x-fern-audiences:
        - public
      summary: Update a Connector
      tags:
        - /connectors
      operationId: update-connector
      x-fern-sdk-method-name: update
      x-fern-sdk-group-name: connectors
      description: >-
        Update a connector by ID. Omitted fields will not be updated. See
        ['Managing your
        Connector'](https://docs.cohere.com/docs/managing-your-connector) for
        more information.
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the connector to update.
          schema:
            type: string
            x-fern-audiences:
              - public
        - $ref: "#/components/parameters/RequestSource"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateConnectorRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateConnectorResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden Error
        "404":
          description: Not Found Error
        "500":
          description: Internal Server Error
      x-readme:
        samples-languages:
          - python
          - node
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere --upgrade
            code: >-
              import cohere

              co = cohere.Client('<<apiKey>>')

              updated_connector = co.update_connector(connector_id="test-id",
              name="new name", url="https://example.com/search")

              print(updated_connector)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const connector = await cohere.connectors.update(connector.id, {
                  name: "test-connector-renamed",
                  description: "A test connector renamed"
                });

                console.log(connector);
              })();
          - language: curl
            name: Curl
            code: |-
              curl --request PATCH \
                --url https://api.cohere.ai/v1/connectors/id \
                --header 'accept: application/json' \
                --header 'content-type: application/json' \
                --header 'Authorization: Bearer <<apiKey>>' \
                --data '
              {
                "name": "new name",
                "url": "https://example.com/search"
              }
              '
    delete:
      x-fern-audiences:
        - public
      summary: Delete a Connector
      tags:
        - /connectors
      description: >-
        Delete a connector by ID. See
        ['Connectors'](https://docs.cohere.com/docs/connectors) for more
        information.
      operationId: delete-connector
      x-fern-sdk-method-name: delete
      x-fern-sdk-group-name: connectors
      parameters:
        - name: id
          description: The ID of the connector to delete.
          in: path
          required: true
          schema:
            type: string
            x-fern-audiences:
              - public
        - $ref: "#/components/parameters/RequestSource"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeleteConnectorResponse"
        "400":
          description: Bad Request
        "403":
          description: Forbidden Error
        "404":
          description: Not Found Error
        "500":
          description: Internal Server Error
      x-readme:
        samples-languages:
          - node
          - curl
        code-samples:
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                await cohere.connectors.delete("connector-id");
              })();
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere --upgrade
            code: |-
              import cohere
              co = cohere.Client('<<apiKey>>')
              co.delete_connector("test-id")
  "/connectors/{id}/oauth/authorize":
    post:
      x-fern-audiences:
        - public
      summary: Authorize with oAuth
      tags:
        - /connectors
      description: >-
        Authorize the connector with the given ID for the connector oauth app. 
        See ['Connector
        Authentication'](https://docs.cohere.com/docs/connector-authentication)
        for more information.
      operationId: oAuthAuthorize-connector
      x-fern-sdk-method-name: oAuthAuthorize
      x-fern-sdk-group-name: connectors
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the connector to authorize.
          schema:
            type: string
            x-fern-audiences:
              - public
        - name: after_token_redirect
          in: query
          description: The URL to redirect to after the connector has been authorized.
          schema:
            type: string
            x-fern-audiences:
              - public
        - $ref: "#/components/parameters/RequestSource"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OAuthAuthorizeResponse"
        "400":
          description: Bad Request
        "404":
          description: Not Found Error
        "500":
          description: Internal Server Error
      x-readme:
        samples-languages:
          - python
          - node
          - curl
        code-samples:
          - language: python
            name: Cohere Python SDK
            install: python -m pip install cohere --upgrade
            code: >-
              import cohere

              co = cohere.Client('<<apiKey>>')

              redirect_url =
              co.oauth_authorize_connector(connector_id="test-id",
              after_token_redirect="https://test.com")

              print(redirect_url)
          - language: node
            name: Cohere TypeScript SDK
            install: npm i cohere-ai
            code: |-
              const { CohereClient } = require("cohere-ai");

              const cohere = new CohereClient({
                  token: "<<apiKey>>",
              });

              (async () => {
                const connector = await cohere.connectors.oAuthAuthorize("connector-id", {
                  redirect_uri: "https://example.com/oauth/callback",
                });

                console.log(connector);
              })();
components:
  securitySchemes:
    bearerAuth:
      type: http
      x-fern-audiences:
        - public
      scheme: bearer
  parameters:
    RequestSource:
      name: X-Client-Name
      description: |
        The name of the project that is making the request.
      x-fern-audiences:
        - public
      schema:
        type: string
      in: header
      required: false
      example: my-cool-project
  schemas:
    ChatMessage:
      description: >
        A single message in a chat history. Contains the role of the sender, the
        text contents of the message, and optionally a username.
      required:
        - role
        - message
      properties:
        role:
          type: string
          x-fern-audiences:
            - public
          enum:
            - CHATBOT
            - USER
        message:
          type: string
          x-fern-audiences:
            - public
          minLength: 1
        user_name:
          type: string
          x-fern-audiences:
            - public
          minLength: 1
    ChatConnector:
      description: |
        The connector used for fetching documents.
      type: object
      required:
        - id
      properties:
        id:
          description: |
            The identifier of the connector.
          type: string
          x-fern-audiences:
            - public
          minLength: 1
        user_access_token:
          description: >
            An optional override to set the token that Cohere passes to the
            connector in the Authorization header.
          type: string
          x-fern-audiences:
            - public
        continue_on_failure:
          description: >
            An optional override to set whether or not the request continues if
            this connector fails.
          type: boolean
          x-fern-audiences:
            - public
        options:
          description: >
            Provides the connector with different settings at request time. The
            key/value pairs of this object are specific to each connector.


            The supported options are:


            **web-search**


            **site** - The web search results will be restricted to this domain
            (and TLD) when specified. Only a single domain is specified, and
            subdomains are also accepted.

            Examples:

            * `{"options": {"site": "cohere.com"}}` would restrict the results
            to all subdomains at cohere.com

            * `{"options": {"site": "txt.cohere.com"}}` would restrict the
            results to `txt.cohere.com`
          type: object
          x-fern-audiences:
            - public
    ChatDocument:
      description: >
        Relevant information that could be used by the model to generate a more
        accurate reply.

        The contents of each document are generally short (under 300 words), and
        are passed in the form of a

        dictionary of strings. Some suggested keys are "text", "author", "date".
        Both the key name and the value will be

        passed to the model.
      type: object
      properties:
        id:
          description: Unique identifier for this document.
          type: string
          x-fern-audiences:
            - public
      additionalProperties:
        type: string
        x-fern-audiences:
          - public
      x-fern-type: "map<string, string>"
    ChatCitation:
      description: |
        A section of the generated reply which cites external knowledge.
      required:
        - start
        - end
        - text
        - document_ids
      properties:
        start:
          description: >
            The index of text that the citation starts at, counting from zero.
            For example, a generation of `Hello, world!` with a citation on
            `world` would have a start value of `7`. This is because the
            citation starts at `w`, which is the seventh character.
          type: integer
          x-fern-audiences:
            - public
        end:
          description: >
            The index of text that the citation ends after, counting from zero.
            For example, a generation of `Hello, world!` with a citation on
            `world` would have an end value of `11`. This is because the
            citation ends after `d`, which is the eleventh character.
          type: integer
          x-fern-audiences:
            - public
        text:
          description: >
            The text of the citation. For example, a generation of `Hello,
            world!` with a citation of `world` would have a text value of
            `world`.
          type: string
          x-fern-audiences:
            - public
          minLength: 1
        document_ids:
          description: >
            Identifiers of documents cited by this section of the generated
            reply.
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
          minItems: 1
    ChatSearchQuery:
      description: >
        The generated search query. Contains the text of the query and a unique
        identifier for the query.
      type: object
      required:
        - text
        - generation_id
      properties:
        text:
          description: |
            The text of the search query.
          type: string
          x-fern-audiences:
            - public
        generation_id:
          description: >
            Unique identifier for the generated search query. Useful for
            submitting feedback.
          type: string
          x-fern-audiences:
            - public
          format: uuid
    ChatSearchResultConnector:
      description: |
        The connector used for fetching documents.
      type: object
      required:
        - id
      properties:
        id:
          description: |
            The identifier of the connector.
          type: string
          x-fern-audiences:
            - public
          minLength: 1
    ChatSearchResult:
      type: object
      required:
        - search_query
        - connector
        - document_ids
      properties:
        search_query:
          $ref: "#/components/schemas/ChatSearchQuery"
          x-fern-audiences:
            - public
        connector:
          description: |
            The connector from which this result comes from.
          $ref: "#/components/schemas/ChatSearchResultConnector"
          x-fern-audiences:
            - public
        document_ids:
          description: |
            Identifiers of documents found by this search query.
          type: array
          x-fern-audiences:
            - public
          minLength: 0
          items:
            type: string
            x-fern-audiences:
              - public
            minLength: 1
    NonStreamedChatResponse:
      required:
        - generation_id
        - text
      properties:
        text:
          type: string
          x-fern-audiences:
            - public
          minLength: 1
          description: Contents of the reply generated by the model.
        generation_id:
          type: string
          x-fern-audiences:
            - public
          format: uuid
          description: >-
            Unique identifier for the generated reply. Useful for submitting
            feedback.
        citations:
          type: array
          x-fern-audiences:
            - public
          minItems: 0
          description: Inline citations for the generated reply.
          items:
            $ref: "#/components/schemas/ChatCitation"
        documents:
          type: array
          x-fern-audiences:
            - public
          minItems: 0
          description: Documents seen by the model when generating the reply.
          items:
            $ref: "#/components/schemas/ChatDocument"
        search_queries:
          type: array
          x-fern-audiences:
            - public
          description: "Generated search queries, meant to be used as part of the RAG flow."
          items:
            $ref: "#/components/schemas/ChatSearchQuery"
        search_results:
          type: array
          x-fern-audiences:
            - public
          minItems: 0
          description: Documents retrieved from each of the conducted searches.
          items:
            $ref: "#/components/schemas/ChatSearchResult"
    ChatStreamEvent:
      required:
        - event_type
      properties:
        event_type:
          type: string
          x-fern-audiences:
            - public
          enum:
            - stream-start
            - search-queries-generation
            - search-results
            - text-generation
            - citation-generation
            - stream-end
    ChatStreamStartEvent:
      allOf:
        - $ref: "#/components/schemas/ChatStreamEvent"
        - type: object
          required:
            - generation_id
          properties:
            generation_id:
              description: >
                Unique identifier for the generated reply. Useful for submitting
                feedback.
              type: string
              x-fern-audiences:
                - public
              format: uuid
              minLength: 1
    ChatSearchQueriesGenerationEvent:
      allOf:
        - $ref: "#/components/schemas/ChatStreamEvent"
        - type: object
          required:
            - search_queries
          properties:
            search_queries:
              type: array
              x-fern-audiences:
                - public
              description: >-
                Generated search queries, meant to be used as part of the RAG
                flow.
              items:
                $ref: "#/components/schemas/ChatSearchQuery"
    ChatSearchResultsEvent:
      allOf:
        - $ref: "#/components/schemas/ChatStreamEvent"
        - type: object
          required:
            - search_results
            - documents
          properties:
            search_results:
              description: >
                Conducted searches and the ids of documents retrieved from each
                of them.
              type: array
              x-fern-audiences:
                - public
              minItems: 0
              items:
                $ref: "#/components/schemas/ChatSearchResult"
            documents:
              description: |
                Documents fetched from searches or provided by the user.
              type: array
              x-fern-audiences:
                - public
              minItems: 0
              items:
                $ref: "#/components/schemas/ChatDocument"
    ChatTextGenerationEvent:
      allOf:
        - $ref: "#/components/schemas/ChatStreamEvent"
        - type: object
          required:
            - text
          properties:
            text:
              description: |
                The next batch of text generated by the model.
              type: string
              x-fern-audiences:
                - public
              minLength: 1
    ChatCitationGenerationEvent:
      allOf:
        - $ref: "#/components/schemas/ChatStreamEvent"
        - type: object
          required:
            - citations
          properties:
            citations:
              description: |
                Citations for the generated reply.
              type: array
              x-fern-audiences:
                - public
              items:
                $ref: "#/components/schemas/ChatCitation"
    SearchQueriesOnlyResponse:
      required:
        - search_queries
      properties:
        search_queries:
          type: array
          x-fern-audiences:
            - public
          description: "Generated search queries, meant to be used as part of the RAG flow."
          items:
            $ref: "#/components/schemas/ChatSearchQuery"
    ChatStreamEndEvent:
      allOf:
        - $ref: "#/components/schemas/ChatStreamEvent"
        - type: object
          required:
            - finish_reason
            - response
          properties:
            finish_reason:
              description: >
                - `COMPLETE` - the model sent back a finished reply

                - `ERROR_LIMIT` - the reply was cut off because the model
                reached the maximum number of tokens for its context length

                - `MAX_TOKENS` - the reply was cut off because the model reached
                the maximum number of tokens specified by the max_tokens
                parameter

                - `ERROR` - something went wrong when generating the reply

                - `ERROR_TOXIC` - the model generated a reply that was deemed
                toxic
              type: string
              x-fern-audiences:
                - public
              enum:
                - COMPLETE
                - ERROR_LIMIT
                - MAX_TOKENS
                - ERROR
                - ERROR_TOXIC
            response:
              x-fern-audiences:
                - public
              description: >
                The consolidated response from the model. Contains the generated
                reply and all the other information streamed back in the
                previous events.
              anyOf:
                - $ref: "#/components/schemas/NonStreamedChatResponse"
                - $ref: "#/components/schemas/SearchQueriesOnlyResponse"
    StreamedChatResponse:
      description: >-
        StreamedChatResponse is returned in streaming mode (specified with
        `stream=True` in the request).
      oneOf:
        - $ref: "#/components/schemas/ChatStreamStartEvent"
        - $ref: "#/components/schemas/ChatSearchQueriesGenerationEvent"
        - $ref: "#/components/schemas/ChatSearchResultsEvent"
        - $ref: "#/components/schemas/ChatTextGenerationEvent"
        - $ref: "#/components/schemas/ChatCitationGenerationEvent"
        - $ref: "#/components/schemas/ChatStreamEndEvent"
      discriminator:
        propertyName: event_type
        mapping:
          stream-start: "#/components/schemas/ChatStreamStartEvent"
          search-queries-generation: "#/components/schemas/ChatSearchQueriesGenerationEvent"
          search-results: "#/components/schemas/ChatSearchResultsEvent"
          text-generation: "#/components/schemas/ChatTextGenerationEvent"
          citation-generation: "#/components/schemas/ChatCitationGenerationEvent"
          stream-end: "#/components/schemas/ChatStreamEndEvent"
    SingleGeneration:
      type: object
      properties:
        id:
          type: string
          x-fern-audiences:
            - public
        text:
          type: string
          x-fern-audiences:
            - public
        index:
          type: integer
          x-fern-audiences:
            - public
          description: >-
            Refers to the nth generation. Only present when `num_generations` is
            greater than zero.
        likelihood:
          type: number
          x-fern-audiences:
            - public
        token_likelihoods:
          type: array
          x-fern-audiences:
            - public
          description: >-
            Only returned if `return_likelihoods` is set to `GENERATION` or
            `ALL`. The likelihood refers to the average log-likelihood of the
            entire specified string, which is useful for [evaluating the
            performance of your model](likelihood-eval), especially if you've
            created a [custom model](/docs/training-custom-models). Individual
            token likelihoods provide the log-likelihood of each token. The
            first token will not have a likelihood.
          items:
            type: object
            x-fern-audiences:
              - public
            properties:
              token:
                type: string
                x-fern-audiences:
                  - public
              likelihood:
                type: number
                x-fern-audiences:
                  - public
            required:
              - id
              - token
              - likelihood
      required:
        - text
        - id
    ApiMeta:
      type: object
      properties:
        api_version:
          type: object
          x-fern-audiences:
            - public
          properties:
            version:
              type: string
              x-fern-audiences:
                - public
            is_deprecated:
              type: boolean
              x-fern-audiences:
                - public
            is_experimental:
              type: boolean
              x-fern-audiences:
                - public
          required:
            - version
        billed_units:
          type: object
          x-fern-audiences:
            - public
          properties:
            input_tokens:
              type: number
              x-fern-audiences:
                - public
              description: |
                The number of billed input tokens.
            output_tokens:
              type: number
              x-fern-audiences:
                - public
              description: |
                The number of billed output tokens.
            search_units:
              type: number
              x-fern-audiences:
                - public
              description: |
                The number of billed search units.
            classifications:
              type: number
              x-fern-audiences:
                - public
              description: |
                The number of billed classifications units.
        warnings:
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
    Generation:
      type: object
      required:
        - id
        - generations
      properties:
        id:
          type: string
          x-fern-audiences:
            - public
        prompt:
          type: string
          x-fern-audiences:
            - public
          description: Prompt used for generations.
        generations:
          type: array
          x-fern-audiences:
            - public
          description: List of generated results
          items:
            type: object
            x-fern-audiences:
              - public
            $ref: "#/components/schemas/SingleGeneration"
        meta:
          $ref: "#/components/schemas/ApiMeta"
          x-fern-audiences:
            - public
    GenerateStreamEvent:
      required:
        - event_type
      properties:
        event_type:
          type: string
          enum:
            - text-generation
            - stream-end
            - stream-error
    GenerateStreamText:
      allOf:
        - $ref: "#/components/schemas/GenerateStreamEvent"
        - type: object
          required:
            - is_finished
            - text
          properties:
            text:
              type: string
              description: A segment of text of the generation.
            index:
              type: integer
              description: >-
                Refers to the nth generation. Only present when
                `num_generations` is greater than zero, and only when text
                responses are being streamed.
            is_finished:
              type: boolean
    FinishReason:
      type: string
      enum:
        - COMPLETE
        - ERROR
        - ERROR_TOXIC
        - ERROR_LIMIT
        - USER_CANCEL
        - MAX_TOKENS
    SingleGenerationInStream:
      type: object
      properties:
        id:
          type: string
          x-fern-audiences:
            - public
        text:
          type: string
          x-fern-audiences:
            - public
          description: Full text of the generation.
        index:
          type: integer
          x-fern-audiences:
            - public
          description: >-
            Refers to the nth generation. Only present when `num_generations` is
            greater than zero.
        finish_reason:
          x-fern-audiences:
            - public
          $ref: "#/components/schemas/FinishReason"
      required:
        - text
        - id
        - finish_reason
    GenerateStreamEnd:
      allOf:
        - $ref: "#/components/schemas/GenerateStreamEvent"
        - type: object
          required:
            - is_finished
            - finish_response
            - response
          properties:
            is_finished:
              x-fern-audiences:
                - public
              type: boolean
            finish_reason:
              x-fern-audiences:
                - public
              $ref: "#/components/schemas/FinishReason"
            response:
              type: object
              x-fern-audiences:
                - public
              required:
                - id
              properties:
                id:
                  x-fern-audiences:
                    - public
                  type: string
                prompt:
                  x-fern-audiences:
                    - public
                  type: string
                generations:
                  x-fern-audiences:
                    - public
                  type: array
                  items:
                    $ref: "#/components/schemas/SingleGenerationInStream"
    GenerateStreamError:
      allOf:
        - $ref: "#/components/schemas/GenerateStreamEvent"
        - type: object
          required:
            - is_finished
            - finish_reason
            - err
          properties:
            index:
              x-fern-audiences:
                - public
              type: integer
              description: >-
                Refers to the nth generation. Only present when
                `num_generations` is greater than zero.
            is_finished:
              x-fern-audiences:
                - public
              type: boolean
            finish_reason:
              x-fern-audiences:
                - public
              $ref: "#/components/schemas/FinishReason"
            err:
              x-fern-audiences:
                - public
              type: string
              description: Error message
    GenerateStreamedResponse:
      description: >-
        Response in content type stream when `stream` is `true` in the request
        parameters. Generation tokens are streamed with the GenerationStream
        response. The final response is of type GenerationFinalResponse.
      oneOf:
        - $ref: "#/components/schemas/GenerateStreamText"
        - $ref: "#/components/schemas/GenerateStreamEnd"
        - $ref: "#/components/schemas/GenerateStreamError"
      discriminator:
        propertyName: event_type
        mapping:
          text-generation: "#/components/schemas/GenerateStreamText"
          stream-end: "#/components/schemas/GenerateStreamEnd"
          stream-error: "#/components/schemas/GenerateStreamError"
    EmbedInputType:
      type: string
      enum:
        - search_document
        - search_query
        - classification
        - clustering
      description: >
        Specifies the type of input passed to the model. Required for embedding
        models v3 and higher.


        - `"search_document"`: Used for embeddings stored in a vector database
        for search use-cases.

        - `"search_query"`: Used for embeddings of search queries run against a
        vector DB to find relevant documents.

        - `"classification"`: Used for embeddings passed through a text
        classifier.

        - `"clustering"`: Used for the embeddings run through a clustering
        algorithm.
    EmbedFloatsResponse:
      type: object
      required:
        - id
        - embeddings
        - texts
        - api_version
      properties:
        response_type:
          type: string
          x-fern-audiences:
            - public
          enum:
            - embeddings_floats
            - embeddings_by_type
        id:
          type: string
          x-fern-audiences:
            - public
        embeddings:
          type: array
          x-fern-audiences:
            - public
          description: >-
            An array of embeddings, where each embedding is an array of floats.
            The length of the `embeddings` array will be the same as the length
            of the original `texts` array.
          items:
            type: array
            x-fern-audiences:
              - public
            items:
              type: number
              x-fern-audiences:
                - public
            readOnly: true
          readOnly: true
        texts:
          type: array
          x-fern-audiences:
            - public
          description: The text entries for which embeddings were returned.
          items:
            type: string
            x-fern-audiences:
              - public
        meta:
          $ref: "#/components/schemas/ApiMeta"
          x-fern-audiences:
            - public
      examples:
        Example:
          value:
            id: bc57846a-3e56-4327-8acc-588ca1a37b8a
            texts:
              - hello world
            embeddings:
              - - -0.039520264
                - -0.04574585
                - -0.08807373
                - -0.084106445
                - -0.009742737
                - -0.0090408325
                - -0.048187256
                - 0.07128906
                - 0.010688782
                - 0.016067505
                - -0.02822876
                - 0.036224365
                - 0.037994385
                - -0.041992188
                - 0.052124023
                - -0.027297974
                - 0.048309326
                - 0.017410278
                - 0.004283905
                - -0.0058555603
                - -0.012992859
                - 0.023040771
                - 0.00121212
                - 0.02078247
                - 0.04827881
                - -0.021530151
                - 0.017807007
                - 0.0075531006
                - -0.047912598
                - -0.042633057
                - 0.0016927719
                - 0.04547119
                - 0.0143585205
                - 0.022354126
                - 0.0017910004
                - 0.048614502
                - -0.02609253
                - 0.007850647
                - 0.00907135
                - 0.0035381317
                - 0.015289307
                - -0.008132935
                - 0.016296387
                - -0.02859497
                - -0.023712158
                - 0.008857727
                - -0.04309082
                - -0.025115967
                - 0.032928467
                - -0.029663086
                - 0.00434494
                - -0.022338867
                - -0.004371643
                - -0.0075035095
                - -0.009529114
                - 0.0038223267
                - -0.06048584
                - -0.018127441
                - 0.010131836
                - 0.08380127
                - 0.03652954
                - 0.0030384064
                - 0.006034851
                - -0.006286621
                - 0.016784668
                - -0.00308609
                - 0.01612854
                - 0.011413574
                - 0.022491455
                - 0.02482605
                - 0.0047683716
                - 0.012245178
                - -0.017593384
                - -0.023254395
                - -0.012641907
                - 0.030181885
                - -0.015365601
                - 0.031021118
                - 0.015144348
                - 0.016708374
                - 0.02180481
                - 0.010765076
                - -0.015586853
                - -0.05819702
                - 0.02128601
                - -0.021713257
                - -0.013320923
                - -0.0064849854
                - -0.001657486
                - -0.030715942
                - -0.008666992
                - 0.060668945
                - -0.0011959076
                - -0.032104492
                - -0.057006836
                - -0.015655518
                - -0.014015198
                - 0.036987305
                - 0.011016846
                - 0.037475586
                - -0.015319824
                - -0.016479492
                - 0.0030403137
                - -0.028167725
                - -0.0067825317
                - -0.00894928
                - -0.026107788
                - 0.010231018
                - 0.031707764
                - 0.050354004
                - -0.016220093
                - 0.04345703
                - -0.008888245
                - -0.0037784576
                - -0.034576416
                - 0.002565384
                - -0.0018634796
                - 0.013954163
                - 0.012062073
                - 0.046813965
                - 0.033081055
                - 0.028778076
                - 0.0051231384
                - 0.022094727
                - -0.021881104
                - -0.009788513
                - -0.04647827
                - -0.025482178
                - 0.066833496
                - -0.040863037
                - -0.019714355
                - 0.06866455
                - -0.07519531
                - -0.045532227
                - -0.020507812
                - 0.021331787
                - 0.036376953
                - -0.034210205
                - 0.017669678
                - 0.0155181885
                - 0.047698975
                - -0.010368347
                - 0.010879517
                - 0.016555786
                - -0.028076172
                - 0.03225708
                - -0.0056152344
                - -0.020690918
                - 0.00011438131
                - -0.021011353
                - -0.04425049
                - -0.029922485
                - -0.0014362335
                - 0.013618469
                - 0.011260986
                - 0.017532349
                - -0.043426514
                - 0.012557983
                - 0.026748657
                - 0.039154053
                - -0.030944824
                - 0.024169922
                - 0.06573486
                - -0.03817749
                - -0.025314331
                - -0.039794922
                - -0.050445557
                - -0.0020828247
                - -0.0010194778
                - 0.01725769
                - 0.0017976761
                - 0.029067993
                - 0.0115356445
                - 0.005214691
                - 0.0066604614
                - -0.014801025
                - -0.033172607
                - 0.023956299
                - 0.008865356
                - 0.09539795
                - 0.062286377
                - -0.0076408386
                - -0.035125732
                - 0.09082031
                - -0.015350342
                - -0.015625
                - -0.0090789795
                - -0.01876831
                - 0.05239868
                - -0.010406494
                - 0.05078125
                - -0.013694763
                - -0.07244873
                - 0.018539429
                - -0.016983032
                - -0.03353882
                - 0.01739502
                - 0.004055023
                - -0.010147095
                - -0.0027599335
                - -0.002714157
                - -0.0107040405
                - 0.021438599
                - -0.029525757
                - 0.01902771
                - -0.025909424
                - 0.0008072853
                - 0.026672363
                - 0.0019044876
                - 0.016937256
                - -0.018814087
                - -0.03668213
                - 0.03338623
                - -0.09240723
                - -0.024765015
                - -0.019378662
                - -0.051757812
                - 0.050109863
                - 0.018859863
                - 0.01687622
                - 0.020111084
                - -0.041534424
                - 0.009559631
                - -0.018859863
                - 0.00005853176
                - 0.032684326
                - -0.04058838
                - 0.015823364
                - -0.038635254
                - 0.0055656433
                - -0.021560669
                - 0.012481689
                - -0.050872803
                - -0.036071777
                - -0.046844482
                - -0.041900635
                - -0.06561279
                - 0.014785767
                - 0.010124207
                - 0.030426025
                - 0.024261475
                - 0.0057411194
                - -0.026275635
                - -0.006919861
                - 0.022750854
                - -0.015167236
                - 0.022964478
                - -0.0033664703
                - 0.02734375
                - 0.03201294
                - 0.025939941
                - 0.019104004
                - 0.028030396
                - -0.014328003
                - -0.01574707
                - 0.06982422
                - -0.008026123
                - 0.006816864
                - -0.0019035339
                - 0.026245117
                - -0.028945923
                - 0.014968872
                - 0.0054244995
                - -0.00028896332
                - -0.02243042
                - -0.0030822754
                - -0.02558899
                - -0.022918701
                - -0.017089844
                - -0.0035190582
                - 0.029953003
                - -0.037078857
                - -0.02507019
                - -0.017303467
                - 0.064331055
                - -0.028533936
                - -0.07287598
                - 0.028839111
                - -0.0029792786
                - -0.02104187
                - -0.01663208
                - -0.016571045
                - -0.015106201
                - 0.0027313232
                - 0.031051636
                - -0.025680542
                - 0.004722595
                - 0.032348633
                - 0.020019531
                - 0.056365967
                - 0.07208252
                - 0.01235199
                - 0.00084495544
                - 0.035369873
                - -0.018569946
                - -0.0063552856
                - 0.03161621
                - 0.064575195
                - -0.02557373
                - -0.007232666
                - -0.017700195
                - -0.003835678
                - 0.007381439
                - -0.0385437
                - -0.0019102097
                - -0.023223877
                - -0.0124435425
                - 0.013343811
                - 0.020996094
                - -0.014022827
                - -0.01939392
                - 0.044128418
                - 0.0052757263
                - -0.00068950653
                - -0.04876709
                - -0.05609131
                - -0.020874023
                - -0.00806427
                - -0.13391113
                - -0.06323242
                - -0.021865845
                - -0.021072388
                - 0.005832672
                - -0.015701294
                - -0.006286621
                - -0.012954712
                - -0.017288208
                - 0.0036773682
                - -0.0084991455
                - -0.03213501
                - 0.021987915
                - -0.010322571
                - -0.029144287
                - 0.003824234
                - 0.02708435
                - 0.0026187897
                - 0.05496216
                - -0.04916382
                - 0.005466461
                - -0.0070648193
                - 0.0793457
                - -0.040863037
                - 0.012641907
                - 0.016448975
                - 0.02041626
                - -0.029006958
                - -0.008491516
                - 0.0023422241
                - 0.043640137
                - 0.0121536255
                - -0.0043525696
                - -0.030899048
                - 0.0062332153
                - -0.013038635
                - 0.007904053
                - -0.03390503
                - -0.034729004
                - -0.0647583
                - -0.0052375793
                - -0.08154297
                - 0.015960693
                - 0.016235352
                - -0.012130737
                - -0.021469116
                - -0.03253174
                - -0.014465332
                - 0.016448975
                - 0.004589081
                - -0.05291748
                - 0.018005371
                - -0.002981186
                - -0.01247406
                - 0.023147583
                - -0.055419922
                - -0.08526611
                - 0.016723633
                - 0.012939453
                - -0.039031982
                - 0.016677856
                - 0.016937256
                - 0.023147583
                - 0.034576416
                - -0.010635376
                - 0.03466797
                - 0.037750244
                - 0.020141602
                - -0.0046539307
                - 0.0059432983
                - 0.05609131
                - 0.027709961
                - 0.01838684
                - 0.015022278
                - -0.039215088
                - -0.0048828125
                - 0.047546387
                - 0.0138549805
                - -0.046203613
                - 0.036193848
                - -0.109680176
                - 0.0019550323
                - -0.03125
                - 0.0084991455
                - -0.0020256042
                - -0.001739502
                - -0.06756592
                - 0.03491211
                - -0.05633545
                - -0.008491516
                - 0.0048446655
                - 0.042663574
                - 0.025054932
                - -0.022247314
                - -0.0044555664
                - 0.0022335052
                - -0.0071907043
                - -0.003982544
                - -0.073913574
                - -0.011253357
                - 0.029220581
                - -0.0047073364
                - -0.04626465
                - 0.05670166
                - -0.041503906
                - 0.014579773
                - -0.016174316
                - 0.021560669
                - -0.019332886
                - 0.01550293
                - 0.02709961
                - 0.010528564
                - 0.012786865
                - -0.023849487
                - -0.016937256
                - -0.04626465
                - -0.04397583
                - 0.026245117
                - -0.017868042
                - 0.021072388
                - -0.02128601
                - -0.012161255
                - -0.004776001
                - -0.0088272095
                - 0.009246826
                - -0.012313843
                - 0.0096206665
                - -0.0047950745
                - -0.0079956055
                - 0.052520752
                - -0.06616211
                - 0.0014686584
                - -0.046081543
                - 0.03289795
                - -0.03656006
                - 0.055389404
                - 0.009773254
                - 0.0013818741
                - 0.043823242
                - 0.034942627
                - 0.055236816
                - -0.011833191
                - -0.024353027
                - 0.011398315
                - -0.051574707
                - -0.019882202
                - 0.0018358231
                - -0.005859375
                - 0.06677246
                - -0.0009851456
                - -0.026809692
                - 0.0075798035
                - -0.021347046
                - -0.01146698
                - 0.03262329
                - 0.031585693
                - -0.006729126
                - 0.008659363
                - -0.025665283
                - 0.02947998
                - -0.03744507
                - 0.02027893
                - -0.026062012
                - 0.018585205
                - -0.004463196
                - -0.036865234
                - -0.043670654
                - 0.021392822
                - -0.062561035
                - -0.080078125
                - 0.011451721
                - 0.06762695
                - 0.039001465
                - -0.016799927
                - 0.049072266
                - 0.041412354
                - -0.03062439
                - 0.011795044
                - -0.016555786
                - 0.046569824
                - 0.010688782
                - -0.01902771
                - -0.031097412
                - -0.023391724
                - -0.01651001
                - 0.009399414
                - 0.049041748
                - -0.025817871
                - -0.018356323
                - 0.02154541
                - -0.0029411316
                - 0.074157715
                - 0.017059326
                - -0.0017595291
                - 0.00390625
                - 0.02645874
                - -0.0010709763
                - 0.040222168
                - -0.034423828
                - 0.0231781
                - -0.016693115
                - -0.022094727
                - 0.004383087
                - 0.007331848
                - 0.018676758
                - 0.023773193
                - -0.0069770813
                - 0.0029773712
                - -0.023712158
                - -0.0051956177
                - -0.011810303
                - -0.0519104
                - 0.07244873
                - 0.032409668
                - 0.016662598
                - 0.015716553
                - -0.03640747
                - 0.03918457
                - -0.046722412
                - -0.0046081543
                - 0.006061554
                - -0.011940002
                - -0.0004878044
                - 0.01260376
                - 0.0073280334
                - 0.0015096664
                - 0.005844116
                - 0.029129028
                - 0.047668457
                - 0.05960083
                - -0.0647583
                - 0.064697266
                - -0.017440796
                - -0.01889038
                - 0.037628174
                - 0.0048065186
                - -0.023101807
                - -0.048675537
                - -0.02508545
                - -0.007965088
                - 0.0015897751
                - 0.06866455
                - -0.0099487305
                - -0.0022964478
                - -0.030014038
                - -0.007713318
                - -0.034362793
                - 0.013931274
                - 0.0026836395
                - -0.0014476776
                - 0.02532959
                - -0.020584106
                - -0.039001465
                - -0.062347412
                - -0.04736328
                - -0.024368286
                - -0.045776367
                - 0.03149414
                - -0.012825012
                - 0.028076172
                - 0.0058784485
                - 0.08062744
                - 0.0104599
                - 0.014579773
                - -0.041137695
                - 0.04244995
                - -0.021011353
                - 0.06390381
                - 0.0010871887
                - 0.04147339
                - -0.0053138733
                - 0.02268982
                - -0.028182983
                - -0.022628784
                - -0.021408081
                - -0.006088257
                - 0.028030396
                - 0.025146484
                - 0.00881958
                - -0.04244995
                - 0.027938843
                - 0.013916016
                - -0.04647827
                - 0.0072288513
                - 0.017745972
                - -0.02381897
                - -0.010147095
                - 0.0096588135
                - -0.04586792
                - -0.014480591
                - -0.0027217865
                - -0.03111267
                - 0.04522705
                - -0.02772522
                - -0.0013189316
                - 0.017807007
                - -0.0135269165
                - -0.014175415
                - -0.00019681454
                - 0.03161621
                - 0.0041007996
                - -0.024871826
                - 0.0039367676
                - -0.026916504
                - 0.03237915
                - 0.007068634
                - 0.029647827
                - -0.0102005005
                - 0.0076675415
                - 0.0051078796
                - -0.008041382
                - -0.0062942505
                - 0.0010309219
                - 0.010543823
                - -0.010101318
                - -0.013496399
                - 0.00920105
                - 0.0546875
                - -0.02784729
                - -0.0056762695
                - -0.08679199
                - -0.050048828
                - 0.03378296
                - 0.010124207
                - 0.019058228
                - -0.037872314
                - -0.0063323975
                - 0.0014324188
                - -0.010002136
                - -0.015731812
                - -0.036071777
                - -0.0028915405
                - -0.0082092285
                - 0.0037841797
                - -0.020629883
                - 0.01725769
                - -0.026000977
                - 0.00012862682
                - 0.021621704
                - 0.07086182
                - -0.008049011
                - -0.012634277
                - -0.064941406
                - -0.0073013306
                - -0.02760315
                - -0.040649414
                - 0.02809143
                - 0.009849548
                - 0.0011720657
                - 0.059936523
                - -0.032806396
                - 0.06311035
                - 0.009536743
                - 0.014801025
                - 0.03390503
                - -0.002620697
                - -0.04650879
                - -0.015365601
                - 0.03741455
                - -0.0067443848
                - -0.008888245
                - -0.0013017654
                - -0.010154724
                - 0.0027217865
                - 0.016052246
                - 0.025100708
                - -0.030532837
                - 0.032318115
                - 0.014564514
                - -0.009109497
                - 0.009628296
                - -0.021438599
                - -0.049926758
                - -0.00088214874
                - -0.019638062
                - -0.020126343
                - 0.055847168
                - -0.006729126
                - -0.044921875
                - -0.01890564
                - -0.0026683807
                - 0.0038547516
                - 0.004600525
                - -0.013977051
                - 0.018341064
                - -0.05178833
                - 0.011054993
                - 0.019927979
                - 0.011436462
                - 0.010391235
                - -0.012680054
                - -0.017669678
                - 0.01928711
                - 0.025115967
                - -0.07757568
                - -0.030960083
                - 0.013137817
                - -0.066467285
                - -0.054473877
                - -0.04244995
                - -0.027526855
                - 0.02973938
                - -0.024017334
                - -0.03918457
                - 0.0154800415
                - -0.036315918
                - 0.015510559
                - -0.020385742
                - -0.0390625
                - -0.00137043
                - 0.0016002655
                - -0.010238647
                - 0.014656067
                - 0.029373169
                - -0.027023315
                - 0.0076141357
                - -0.001917839
                - 0.03451538
                - 0.004814148
                - 0.024887085
                - 0.036315918
                - -0.006500244
                - -0.070495605
                - -0.0071754456
                - 0.025863647
                - 0.022994995
                - 0.007217407
                - 0.032165527
                - 0.016830444
                - 0.02859497
                - -0.011123657
                - 0.020126343
                - -0.0014410019
                - 0.0021781921
                - 0.053619385
                - 0.015625
                - 0.017150879
                - -0.03326416
                - -0.04626465
                - 0.034332275
                - 0.07165527
                - -0.040740967
                - -0.06628418
                - -0.024291992
                - -0.0066871643
                - 0.065979004
                - 0.034851074
                - 0.07678223
                - 0.053009033
                - 0.0317688
                - -0.04019165
                - 0.030288696
                - 0.062347412
                - -0.011734009
                - 0.0024604797
                - 0.006095886
                - -0.0152282715
                - 0.056762695
                - 0.021270752
                - -0.011154175
                - -0.0143966675
                - 0.0057754517
                - -0.0003619194
                - 0.0053367615
                - -0.030639648
                - 0.0024776459
                - -0.031799316
                - -0.012710571
                - 0.048828125
                - 0.029632568
                - 0.013244629
                - 0.087890625
                - -0.01134491
                - 0.028656006
                - -0.014778137
                - 0.06695557
                - 0.026275635
                - -0.016113281
                - 0.018859863
                - -0.008239746
                - 0.024383545
                - -0.039154053
                - -0.006252289
                - 0.049224854
                - -0.04638672
                - 0.0031967163
                - -0.04849243
                - -0.04058838
                - 0.038757324
                - 0.00730896
                - -0.04345703
                - 0.04296875
                - -0.0024299622
                - -0.05670166
                - 0.019119263
                - -0.011802673
                - 0.038970947
                - -0.03366089
                - 0.03591919
                - -0.0009088516
                - 0.013259888
                - -0.07342529
                - 0.004299164
                - 0.0395813
                - 0.013420105
                - -0.004459381
                - -0.0084991455
                - 0.031982422
                - 0.018249512
                - -0.0038604736
                - -0.022323608
                - -0.013031006
                - 0.0513916
                - -0.007068634
                - -0.003545761
                - 0.010292053
                - -0.010322571
                - -0.0037841797
                - 0.043701172
                - -0.012672424
                - 0.013725281
                - 0.021575928
                - -0.03942871
                - -0.0105896
                - -0.01878357
                - -0.017623901
                - -0.03414917
                - 0.02142334
                - 0.026550293
                - -0.022903442
                - 0.008598328
                - 0.03100586
                - 0.049957275
                - 0.021438599
                - 0.016204834
                - -0.014129639
                - 0.0079193115
                - -0.004535675
                - 0.0010051727
                - -0.038208008
                - -0.014923096
                - -0.01436615
                - -0.009666443
                - 0.0006933212
                - 0.0132369995
                - 0.01486969
                - 0.028762817
                - 0.011329651
                - -0.042663574
                - 0.014961243
                - -0.018127441
                - -0.007232666
                - 0.008369446
                - 0.027557373
                - 0.006706238
                - -0.05038452
                - -0.023666382
                - -0.0072898865
                - -0.007865906
                - -0.008926392
                - -0.013137817
                - 0.08886719
                - 0.030929565
                - 0.021255493
                - -0.0020389557
                - -0.08337402
                - -0.020385742
                - 0.03866577
                - -0.020523071
                - 0.021881104
                - 0.005756378
                - 0.022003174
                - 0.021209717
                - -0.06161499
                - -0.020309448
                - -0.0057258606
                - -0.033813477
                - 0.0017337799
                - -0.052612305
                - 0.01461792
                - -0.017944336
                - 0.042816162
                - -0.053710938
                - -0.041259766
                - -0.014549255
                - 0.020843506
                - -0.019760132
                - 0.004890442
                - -0.0007162094
                - -0.009429932
                - -0.01966858
                - -0.014320374
                - 0.041259766
                - 0.00075244904
                - -0.0064430237
                - 0.028961182
                - -0.01876831
                - 0.0027942657
                - -0.051116943
                - 0.00093746185
                - 0.0037384033
                - -0.06982422
                - -0.0107040405
                - 0.030090332
                - -0.019104004
                - -0.016647339
                - -0.037475586
                - 0.0140686035
                - -0.051086426
                - -0.032409668
                - -0.011131287
                - -0.023620605
                - -0.04159546
                - -0.034851074
                - -0.064941406
                - -0.03451538
                - 0.0047416687
                - -0.04510498
                - 0.020477295
                - -0.03024292
                - -0.034179688
                - 0.058410645
                - 0.008514404
                - 0.0049858093
                - 0.02331543
                - 0.03704834
                - -0.017333984
                - 0.014389038
                - 0.013786316
                - 0.008583069
                - -0.009643555
                - 0.020095825
                - 0.013496399
                - -0.01991272
                - -0.0446167
                - 0.0075149536
                - 0.0071029663
                - 0.0446167
                - -0.03933716
                - 0.009902954
                - 0.011077881
                - 0.008781433
                - -0.001701355
                - 0.016235352
                - 0.01802063
                - -0.010765076
                - -0.03427124
                - 0.0112838745
                - -0.023208618
                - -0.009979248
                - -0.010696411
                - -0.023208618
                - -0.026748657
                - -0.02923584
                - 0.013801575
                - -0.050323486
                - -0.0059661865
                - -0.004837036
                - 0.01940918
                - 0.00018620491
                - 0.0016450882
                - 0.019012451
                - -0.048034668
                - 0.034423828
                - -0.033599854
                - 0.020126343
                - -0.04949951
                - 0.071899414
                - -0.06060791
                - -0.043395996
                - 0.012138367
                - 0.022476196
                - 0.029006958
                - 0.04550171
                - -0.03564453
                - -0.015090942
                - 0.055541992
                - 0.014884949
                - 0.020767212
                - -0.01071167
                - 0.046905518
                - 0.033813477
                - -0.04260254
                - -0.00094127655
                - 0.016708374
                - -0.0011367798
                - -0.030426025
                - -0.03427124
                - 0.01763916
                - -0.012634277
                - 0.030517578
                - -0.055480957
                - -0.054992676
                - 0.056274414
                - -0.0007033348
                - -0.058624268
                - 0.0061531067
                - -0.008613586
                - 0.016067505
                - 0.003376007
                - -0.01586914
                - -0.025146484
                - 0.008491516
                - 0.053222656
                - -0.02923584
                - 0.021408081
            meta:
              api_version:
                version: "1"
            api_version: v1
    EmbedByTypeResponse:
      type: object
      required:
        - id
        - embeddings
        - texts
        - api_version
      properties:
        response_type:
          type: string
          x-fern-audiences:
            - public
          enum:
            - embeddings_floats
            - embeddings_by_type
        id:
          type: string
          x-fern-audiences:
            - public
        embeddings:
          type: object
          x-fern-audiences:
            - public
          description: >-
            An object with different embedding types. The length of each
            embedding type array will be the same as the length of the original
            `texts` array.
          properties:
            float:
              type: array
              x-fern-audiences:
                - public
              description: An array of float embeddings.
              items:
                type: array
                x-fern-audiences:
                  - public
                items:
                  type: number
                  x-fern-audiences:
                    - public
                readOnly: true
              readOnly: true
            int8:
              type: array
              x-fern-audiences:
                - public
              description: >-
                An array of signed int8 embeddings. Each value is between -128
                and 127.
              items:
                type: array
                x-fern-audiences:
                  - public
                items:
                  type: number
                  x-fern-audiences:
                    - public
                readOnly: true
              readOnly: true
            uint8:
              type: array
              x-fern-audiences:
                - public
              description: >-
                An array of unsigned int8 embeddings. Each value is between 0
                and 255.
              items:
                type: array
                x-fern-audiences:
                  - public
                items:
                  type: number
                  x-fern-audiences:
                    - public
                readOnly: true
              readOnly: true
            binary:
              type: array
              x-fern-audiences:
                - public
              description: >-
                An array of packed signed binary embeddings. The length of each
                binary embedding is 1/8 the length of the float embeddings of
                the provided model. Each value is between -128 and 127.
              items:
                type: array
                x-fern-audiences:
                  - public
                items:
                  type: number
                  x-fern-audiences:
                    - public
                readOnly: true
              readOnly: true
            ubinary:
              type: array
              x-fern-audiences:
                - public
              description: >-
                An array of packed unsigned binary embeddings. The length of
                each binary embedding is 1/8 the length of the float embeddings
                of the provided model. Each value is between 0 and 255.
              items:
                type: array
                x-fern-audiences:
                  - public
                items:
                  type: number
                  x-fern-audiences:
                    - public
                readOnly: true
          items:
            type: array
            x-fern-audiences:
              - public
            items:
              type: number
              x-fern-audiences:
                - public
            readOnly: true
          readOnly: true
        texts:
          type: array
          x-fern-audiences:
            - public
          description: The text entries for which embeddings were returned.
          items:
            type: string
            x-fern-audiences:
              - public
        meta:
          $ref: "#/components/schemas/ApiMeta"
          x-fern-audiences:
            - public
      examples:
        Example:
          value:
            id: bc57846a-3e56-4327-8acc-588ca1a37b8a
            texts:
              - hello world
            embeddings:
              float:
                - - -0.039520264
                  - -0.04574585
                  - -0.08807373
                  - -0.084106445
                  - -0.009742737
                  - -0.0090408325
                  - -0.048187256
                  - 0.07128906
                  - 0.010688782
                  - 0.016067505
                  - -0.02822876
                  - 0.036224365
                  - 0.037994385
                  - -0.041992188
                  - 0.052124023
                  - -0.027297974
                  - 0.048309326
                  - 0.017410278
                  - 0.004283905
                  - -0.0058555603
                  - -0.012992859
                  - 0.023040771
                  - 0.00121212
                  - 0.02078247
                  - 0.04827881
                  - -0.021530151
                  - 0.017807007
                  - 0.0075531006
                  - -0.047912598
                  - -0.042633057
                  - 0.0016927719
                  - 0.04547119
                  - 0.0143585205
                  - 0.022354126
                  - 0.0017910004
                  - 0.048614502
                  - -0.02609253
                  - 0.007850647
                  - 0.00907135
                  - 0.0035381317
                  - 0.015289307
                  - -0.008132935
                  - 0.016296387
                  - -0.02859497
                  - -0.023712158
                  - 0.008857727
                  - -0.04309082
                  - -0.025115967
                  - 0.032928467
                  - -0.029663086
                  - 0.00434494
                  - -0.022338867
                  - -0.004371643
                  - -0.0075035095
                  - -0.009529114
                  - 0.0038223267
                  - -0.06048584
                  - -0.018127441
                  - 0.010131836
                  - 0.08380127
                  - 0.03652954
                  - 0.0030384064
                  - 0.006034851
                  - -0.006286621
                  - 0.016784668
                  - -0.00308609
                  - 0.01612854
                  - 0.011413574
                  - 0.022491455
                  - 0.02482605
                  - 0.0047683716
                  - 0.012245178
                  - -0.017593384
                  - -0.023254395
                  - -0.012641907
                  - 0.030181885
                  - -0.015365601
                  - 0.031021118
                  - 0.015144348
                  - 0.016708374
                  - 0.02180481
                  - 0.010765076
                  - -0.015586853
                  - -0.05819702
                  - 0.02128601
                  - -0.021713257
                  - -0.013320923
                  - -0.0064849854
                  - -0.001657486
                  - -0.030715942
                  - -0.008666992
                  - 0.060668945
                  - -0.0011959076
                  - -0.032104492
                  - -0.057006836
                  - -0.015655518
                  - -0.014015198
                  - 0.036987305
                  - 0.011016846
                  - 0.037475586
                  - -0.015319824
                  - -0.016479492
                  - 0.0030403137
                  - -0.028167725
                  - -0.0067825317
                  - -0.00894928
                  - -0.026107788
                  - 0.010231018
                  - 0.031707764
                  - 0.050354004
                  - -0.016220093
                  - 0.04345703
                  - -0.008888245
                  - -0.0037784576
                  - -0.034576416
                  - 0.002565384
                  - -0.0018634796
                  - 0.013954163
                  - 0.012062073
                  - 0.046813965
                  - 0.033081055
                  - 0.028778076
                  - 0.0051231384
                  - 0.022094727
                  - -0.021881104
                  - -0.009788513
                  - -0.04647827
                  - -0.025482178
                  - 0.066833496
                  - -0.040863037
                  - -0.019714355
                  - 0.06866455
                  - -0.07519531
                  - -0.045532227
                  - -0.020507812
                  - 0.021331787
                  - 0.036376953
                  - -0.034210205
                  - 0.017669678
                  - 0.0155181885
                  - 0.047698975
                  - -0.010368347
                  - 0.010879517
                  - 0.016555786
                  - -0.028076172
                  - 0.03225708
                  - -0.0056152344
                  - -0.020690918
                  - 0.00011438131
                  - -0.021011353
                  - -0.04425049
                  - -0.029922485
                  - -0.0014362335
                  - 0.013618469
                  - 0.011260986
                  - 0.017532349
                  - -0.043426514
                  - 0.012557983
                  - 0.026748657
                  - 0.039154053
                  - -0.030944824
                  - 0.024169922
                  - 0.06573486
                  - -0.03817749
                  - -0.025314331
                  - -0.039794922
                  - -0.050445557
                  - -0.0020828247
                  - -0.0010194778
                  - 0.01725769
                  - 0.0017976761
                  - 0.029067993
                  - 0.0115356445
                  - 0.005214691
                  - 0.0066604614
                  - -0.014801025
                  - -0.033172607
                  - 0.023956299
                  - 0.008865356
                  - 0.09539795
                  - 0.062286377
                  - -0.0076408386
                  - -0.035125732
                  - 0.09082031
                  - -0.015350342
                  - -0.015625
                  - -0.0090789795
                  - -0.01876831
                  - 0.05239868
                  - -0.010406494
                  - 0.05078125
                  - -0.013694763
                  - -0.07244873
                  - 0.018539429
                  - -0.016983032
                  - -0.03353882
                  - 0.01739502
                  - 0.004055023
                  - -0.010147095
                  - -0.0027599335
                  - -0.002714157
                  - -0.0107040405
                  - 0.021438599
                  - -0.029525757
                  - 0.01902771
                  - -0.025909424
                  - 0.0008072853
                  - 0.026672363
                  - 0.0019044876
                  - 0.016937256
                  - -0.018814087
                  - -0.03668213
                  - 0.03338623
                  - -0.09240723
                  - -0.024765015
                  - -0.019378662
                  - -0.051757812
                  - 0.050109863
                  - 0.018859863
                  - 0.01687622
                  - 0.020111084
                  - -0.041534424
                  - 0.009559631
                  - -0.018859863
                  - 0.00005853176
                  - 0.032684326
                  - -0.04058838
                  - 0.015823364
                  - -0.038635254
                  - 0.0055656433
                  - -0.021560669
                  - 0.012481689
                  - -0.050872803
                  - -0.036071777
                  - -0.046844482
                  - -0.041900635
                  - -0.06561279
                  - 0.014785767
                  - 0.010124207
                  - 0.030426025
                  - 0.024261475
                  - 0.0057411194
                  - -0.026275635
                  - -0.006919861
                  - 0.022750854
                  - -0.015167236
                  - 0.022964478
                  - -0.0033664703
                  - 0.02734375
                  - 0.03201294
                  - 0.025939941
                  - 0.019104004
                  - 0.028030396
                  - -0.014328003
                  - -0.01574707
                  - 0.06982422
                  - -0.008026123
                  - 0.006816864
                  - -0.0019035339
                  - 0.026245117
                  - -0.028945923
                  - 0.014968872
                  - 0.0054244995
                  - -0.00028896332
                  - -0.02243042
                  - -0.0030822754
                  - -0.02558899
                  - -0.022918701
                  - -0.017089844
                  - -0.0035190582
                  - 0.029953003
                  - -0.037078857
                  - -0.02507019
                  - -0.017303467
                  - 0.064331055
                  - -0.028533936
                  - -0.07287598
                  - 0.028839111
                  - -0.0029792786
                  - -0.02104187
                  - -0.01663208
                  - -0.016571045
                  - -0.015106201
                  - 0.0027313232
                  - 0.031051636
                  - -0.025680542
                  - 0.004722595
                  - 0.032348633
                  - 0.020019531
                  - 0.056365967
                  - 0.07208252
                  - 0.01235199
                  - 0.00084495544
                  - 0.035369873
                  - -0.018569946
                  - -0.0063552856
                  - 0.03161621
                  - 0.064575195
                  - -0.02557373
                  - -0.007232666
                  - -0.017700195
                  - -0.003835678
                  - 0.007381439
                  - -0.0385437
                  - -0.0019102097
                  - -0.023223877
                  - -0.0124435425
                  - 0.013343811
                  - 0.020996094
                  - -0.014022827
                  - -0.01939392
                  - 0.044128418
                  - 0.0052757263
                  - -0.00068950653
                  - -0.04876709
                  - -0.05609131
                  - -0.020874023
                  - -0.00806427
                  - -0.13391113
                  - -0.06323242
                  - -0.021865845
                  - -0.021072388
                  - 0.005832672
                  - -0.015701294
                  - -0.006286621
                  - -0.012954712
                  - -0.017288208
                  - 0.0036773682
                  - -0.0084991455
                  - -0.03213501
                  - 0.021987915
                  - -0.010322571
                  - -0.029144287
                  - 0.003824234
                  - 0.02708435
                  - 0.0026187897
                  - 0.05496216
                  - -0.04916382
                  - 0.005466461
                  - -0.0070648193
                  - 0.0793457
                  - -0.040863037
                  - 0.012641907
                  - 0.016448975
                  - 0.02041626
                  - -0.029006958
                  - -0.008491516
                  - 0.0023422241
                  - 0.043640137
                  - 0.0121536255
                  - -0.0043525696
                  - -0.030899048
                  - 0.0062332153
                  - -0.013038635
                  - 0.007904053
                  - -0.03390503
                  - -0.034729004
                  - -0.0647583
                  - -0.0052375793
                  - -0.08154297
                  - 0.015960693
                  - 0.016235352
                  - -0.012130737
                  - -0.021469116
                  - -0.03253174
                  - -0.014465332
                  - 0.016448975
                  - 0.004589081
                  - -0.05291748
                  - 0.018005371
                  - -0.002981186
                  - -0.01247406
                  - 0.023147583
                  - -0.055419922
                  - -0.08526611
                  - 0.016723633
                  - 0.012939453
                  - -0.039031982
                  - 0.016677856
                  - 0.016937256
                  - 0.023147583
                  - 0.034576416
                  - -0.010635376
                  - 0.03466797
                  - 0.037750244
                  - 0.020141602
                  - -0.0046539307
                  - 0.0059432983
                  - 0.05609131
                  - 0.027709961
                  - 0.01838684
                  - 0.015022278
                  - -0.039215088
                  - -0.0048828125
                  - 0.047546387
                  - 0.0138549805
                  - -0.046203613
                  - 0.036193848
                  - -0.109680176
                  - 0.0019550323
                  - -0.03125
                  - 0.0084991455
                  - -0.0020256042
                  - -0.001739502
                  - -0.06756592
                  - 0.03491211
                  - -0.05633545
                  - -0.008491516
                  - 0.0048446655
                  - 0.042663574
                  - 0.025054932
                  - -0.022247314
                  - -0.0044555664
                  - 0.0022335052
                  - -0.0071907043
                  - -0.003982544
                  - -0.073913574
                  - -0.011253357
                  - 0.029220581
                  - -0.0047073364
                  - -0.04626465
                  - 0.05670166
                  - -0.041503906
                  - 0.014579773
                  - -0.016174316
                  - 0.021560669
                  - -0.019332886
                  - 0.01550293
                  - 0.02709961
                  - 0.010528564
                  - 0.012786865
                  - -0.023849487
                  - -0.016937256
                  - -0.04626465
                  - -0.04397583
                  - 0.026245117
                  - -0.017868042
                  - 0.021072388
                  - -0.02128601
                  - -0.012161255
                  - -0.004776001
                  - -0.0088272095
                  - 0.009246826
                  - -0.012313843
                  - 0.0096206665
                  - -0.0047950745
                  - -0.0079956055
                  - 0.052520752
                  - -0.06616211
                  - 0.0014686584
                  - -0.046081543
                  - 0.03289795
                  - -0.03656006
                  - 0.055389404
                  - 0.009773254
                  - 0.0013818741
                  - 0.043823242
                  - 0.034942627
                  - 0.055236816
                  - -0.011833191
                  - -0.024353027
                  - 0.011398315
                  - -0.051574707
                  - -0.019882202
                  - 0.0018358231
                  - -0.005859375
                  - 0.06677246
                  - -0.0009851456
                  - -0.026809692
                  - 0.0075798035
                  - -0.021347046
                  - -0.01146698
                  - 0.03262329
                  - 0.031585693
                  - -0.006729126
                  - 0.008659363
                  - -0.025665283
                  - 0.02947998
                  - -0.03744507
                  - 0.02027893
                  - -0.026062012
                  - 0.018585205
                  - -0.004463196
                  - -0.036865234
                  - -0.043670654
                  - 0.021392822
                  - -0.062561035
                  - -0.080078125
                  - 0.011451721
                  - 0.06762695
                  - 0.039001465
                  - -0.016799927
                  - 0.049072266
                  - 0.041412354
                  - -0.03062439
                  - 0.011795044
                  - -0.016555786
                  - 0.046569824
                  - 0.010688782
                  - -0.01902771
                  - -0.031097412
                  - -0.023391724
                  - -0.01651001
                  - 0.009399414
                  - 0.049041748
                  - -0.025817871
                  - -0.018356323
                  - 0.02154541
                  - -0.0029411316
                  - 0.074157715
                  - 0.017059326
                  - -0.0017595291
                  - 0.00390625
                  - 0.02645874
                  - -0.0010709763
                  - 0.040222168
                  - -0.034423828
                  - 0.0231781
                  - -0.016693115
                  - -0.022094727
                  - 0.004383087
                  - 0.007331848
                  - 0.018676758
                  - 0.023773193
                  - -0.0069770813
                  - 0.0029773712
                  - -0.023712158
                  - -0.0051956177
                  - -0.011810303
                  - -0.0519104
                  - 0.07244873
                  - 0.032409668
                  - 0.016662598
                  - 0.015716553
                  - -0.03640747
                  - 0.03918457
                  - -0.046722412
                  - -0.0046081543
                  - 0.006061554
                  - -0.011940002
                  - -0.0004878044
                  - 0.01260376
                  - 0.0073280334
                  - 0.0015096664
                  - 0.005844116
                  - 0.029129028
                  - 0.047668457
                  - 0.05960083
                  - -0.0647583
                  - 0.064697266
                  - -0.017440796
                  - -0.01889038
                  - 0.037628174
                  - 0.0048065186
                  - -0.023101807
                  - -0.048675537
                  - -0.02508545
                  - -0.007965088
                  - 0.0015897751
                  - 0.06866455
                  - -0.0099487305
                  - -0.0022964478
                  - -0.030014038
                  - -0.007713318
                  - -0.034362793
                  - 0.013931274
                  - 0.0026836395
                  - -0.0014476776
                  - 0.02532959
                  - -0.020584106
                  - -0.039001465
                  - -0.062347412
                  - -0.04736328
                  - -0.024368286
                  - -0.045776367
                  - 0.03149414
                  - -0.012825012
                  - 0.028076172
                  - 0.0058784485
                  - 0.08062744
                  - 0.0104599
                  - 0.014579773
                  - -0.041137695
                  - 0.04244995
                  - -0.021011353
                  - 0.06390381
                  - 0.0010871887
                  - 0.04147339
                  - -0.0053138733
                  - 0.02268982
                  - -0.028182983
                  - -0.022628784
                  - -0.021408081
                  - -0.006088257
                  - 0.028030396
                  - 0.025146484
                  - 0.00881958
                  - -0.04244995
                  - 0.027938843
                  - 0.013916016
                  - -0.04647827
                  - 0.0072288513
                  - 0.017745972
                  - -0.02381897
                  - -0.010147095
                  - 0.0096588135
                  - -0.04586792
                  - -0.014480591
                  - -0.0027217865
                  - -0.03111267
                  - 0.04522705
                  - -0.02772522
                  - -0.0013189316
                  - 0.017807007
                  - -0.0135269165
                  - -0.014175415
                  - -0.00019681454
                  - 0.03161621
                  - 0.0041007996
                  - -0.024871826
                  - 0.0039367676
                  - -0.026916504
                  - 0.03237915
                  - 0.007068634
                  - 0.029647827
                  - -0.0102005005
                  - 0.0076675415
                  - 0.0051078796
                  - -0.008041382
                  - -0.0062942505
                  - 0.0010309219
                  - 0.010543823
                  - -0.010101318
                  - -0.013496399
                  - 0.00920105
                  - 0.0546875
                  - -0.02784729
                  - -0.0056762695
                  - -0.08679199
                  - -0.050048828
                  - 0.03378296
                  - 0.010124207
                  - 0.019058228
                  - -0.037872314
                  - -0.0063323975
                  - 0.0014324188
                  - -0.010002136
                  - -0.015731812
                  - -0.036071777
                  - -0.0028915405
                  - -0.0082092285
                  - 0.0037841797
                  - -0.020629883
                  - 0.01725769
                  - -0.026000977
                  - 0.00012862682
                  - 0.021621704
                  - 0.07086182
                  - -0.008049011
                  - -0.012634277
                  - -0.064941406
                  - -0.0073013306
                  - -0.02760315
                  - -0.040649414
                  - 0.02809143
                  - 0.009849548
                  - 0.0011720657
                  - 0.059936523
                  - -0.032806396
                  - 0.06311035
                  - 0.009536743
                  - 0.014801025
                  - 0.03390503
                  - -0.002620697
                  - -0.04650879
                  - -0.015365601
                  - 0.03741455
                  - -0.0067443848
                  - -0.008888245
                  - -0.0013017654
                  - -0.010154724
                  - 0.0027217865
                  - 0.016052246
                  - 0.025100708
                  - -0.030532837
                  - 0.032318115
                  - 0.014564514
                  - -0.009109497
                  - 0.009628296
                  - -0.021438599
                  - -0.049926758
                  - -0.00088214874
                  - -0.019638062
                  - -0.020126343
                  - 0.055847168
                  - -0.006729126
                  - -0.044921875
                  - -0.01890564
                  - -0.0026683807
                  - 0.0038547516
                  - 0.004600525
                  - -0.013977051
                  - 0.018341064
                  - -0.05178833
                  - 0.011054993
                  - 0.019927979
                  - 0.011436462
                  - 0.010391235
                  - -0.012680054
                  - -0.017669678
                  - 0.01928711
                  - 0.025115967
                  - -0.07757568
                  - -0.030960083
                  - 0.013137817
                  - -0.066467285
                  - -0.054473877
                  - -0.04244995
                  - -0.027526855
                  - 0.02973938
                  - -0.024017334
                  - -0.03918457
                  - 0.0154800415
                  - -0.036315918
                  - 0.015510559
                  - -0.020385742
                  - -0.0390625
                  - -0.00137043
                  - 0.0016002655
                  - -0.010238647
                  - 0.014656067
                  - 0.029373169
                  - -0.027023315
                  - 0.0076141357
                  - -0.001917839
                  - 0.03451538
                  - 0.004814148
                  - 0.024887085
                  - 0.036315918
                  - -0.006500244
                  - -0.070495605
                  - -0.0071754456
                  - 0.025863647
                  - 0.022994995
                  - 0.007217407
                  - 0.032165527
                  - 0.016830444
                  - 0.02859497
                  - -0.011123657
                  - 0.020126343
                  - -0.0014410019
                  - 0.0021781921
                  - 0.053619385
                  - 0.015625
                  - 0.017150879
                  - -0.03326416
                  - -0.04626465
                  - 0.034332275
                  - 0.07165527
                  - -0.040740967
                  - -0.06628418
                  - -0.024291992
                  - -0.0066871643
                  - 0.065979004
                  - 0.034851074
                  - 0.07678223
                  - 0.053009033
                  - 0.0317688
                  - -0.04019165
                  - 0.030288696
                  - 0.062347412
                  - -0.011734009
                  - 0.0024604797
                  - 0.006095886
                  - -0.0152282715
                  - 0.056762695
                  - 0.021270752
                  - -0.011154175
                  - -0.0143966675
                  - 0.0057754517
                  - -0.0003619194
                  - 0.0053367615
                  - -0.030639648
                  - 0.0024776459
                  - -0.031799316
                  - -0.012710571
                  - 0.048828125
                  - 0.029632568
                  - 0.013244629
                  - 0.087890625
                  - -0.01134491
                  - 0.028656006
                  - -0.014778137
                  - 0.06695557
                  - 0.026275635
                  - -0.016113281
                  - 0.018859863
                  - -0.008239746
                  - 0.024383545
                  - -0.039154053
                  - -0.006252289
                  - 0.049224854
                  - -0.04638672
                  - 0.0031967163
                  - -0.04849243
                  - -0.04058838
                  - 0.038757324
                  - 0.00730896
                  - -0.04345703
                  - 0.04296875
                  - -0.0024299622
                  - -0.05670166
                  - 0.019119263
                  - -0.011802673
                  - 0.038970947
                  - -0.03366089
                  - 0.03591919
                  - -0.0009088516
                  - 0.013259888
                  - -0.07342529
                  - 0.004299164
                  - 0.0395813
                  - 0.013420105
                  - -0.004459381
                  - -0.0084991455
                  - 0.031982422
                  - 0.018249512
                  - -0.0038604736
                  - -0.022323608
                  - -0.013031006
                  - 0.0513916
                  - -0.007068634
                  - -0.003545761
                  - 0.010292053
                  - -0.010322571
                  - -0.0037841797
                  - 0.043701172
                  - -0.012672424
                  - 0.013725281
                  - 0.021575928
                  - -0.03942871
                  - -0.0105896
                  - -0.01878357
                  - -0.017623901
                  - -0.03414917
                  - 0.02142334
                  - 0.026550293
                  - -0.022903442
                  - 0.008598328
                  - 0.03100586
                  - 0.049957275
                  - 0.021438599
                  - 0.016204834
                  - -0.014129639
                  - 0.0079193115
                  - -0.004535675
                  - 0.0010051727
                  - -0.038208008
                  - -0.014923096
                  - -0.01436615
                  - -0.009666443
                  - 0.0006933212
                  - 0.0132369995
                  - 0.01486969
                  - 0.028762817
                  - 0.011329651
                  - -0.042663574
                  - 0.014961243
                  - -0.018127441
                  - -0.007232666
                  - 0.008369446
                  - 0.027557373
                  - 0.006706238
                  - -0.05038452
                  - -0.023666382
                  - -0.0072898865
                  - -0.007865906
                  - -0.008926392
                  - -0.013137817
                  - 0.08886719
                  - 0.030929565
                  - 0.021255493
                  - -0.0020389557
                  - -0.08337402
                  - -0.020385742
                  - 0.03866577
                  - -0.020523071
                  - 0.021881104
                  - 0.005756378
                  - 0.022003174
                  - 0.021209717
                  - -0.06161499
                  - -0.020309448
                  - -0.0057258606
                  - -0.033813477
                  - 0.0017337799
                  - -0.052612305
                  - 0.01461792
                  - -0.017944336
                  - 0.042816162
                  - -0.053710938
                  - -0.041259766
                  - -0.014549255
                  - 0.020843506
                  - -0.019760132
                  - 0.004890442
                  - -0.0007162094
                  - -0.009429932
                  - -0.01966858
                  - -0.014320374
                  - 0.041259766
                  - 0.00075244904
                  - -0.0064430237
                  - 0.028961182
                  - -0.01876831
                  - 0.0027942657
                  - -0.051116943
                  - 0.00093746185
                  - 0.0037384033
                  - -0.06982422
                  - -0.0107040405
                  - 0.030090332
                  - -0.019104004
                  - -0.016647339
                  - -0.037475586
                  - 0.0140686035
                  - -0.051086426
                  - -0.032409668
                  - -0.011131287
                  - -0.023620605
                  - -0.04159546
                  - -0.034851074
                  - -0.064941406
                  - -0.03451538
                  - 0.0047416687
                  - -0.04510498
                  - 0.020477295
                  - -0.03024292
                  - -0.034179688
                  - 0.058410645
                  - 0.008514404
                  - 0.0049858093
                  - 0.02331543
                  - 0.03704834
                  - -0.017333984
                  - 0.014389038
                  - 0.013786316
                  - 0.008583069
                  - -0.009643555
                  - 0.020095825
                  - 0.013496399
                  - -0.01991272
                  - -0.0446167
                  - 0.0075149536
                  - 0.0071029663
                  - 0.0446167
                  - -0.03933716
                  - 0.009902954
                  - 0.011077881
                  - 0.008781433
                  - -0.001701355
                  - 0.016235352
                  - 0.01802063
                  - -0.010765076
                  - -0.03427124
                  - 0.0112838745
                  - -0.023208618
                  - -0.009979248
                  - -0.010696411
                  - -0.023208618
                  - -0.026748657
                  - -0.02923584
                  - 0.013801575
                  - -0.050323486
                  - -0.0059661865
                  - -0.004837036
                  - 0.01940918
                  - 0.00018620491
                  - 0.0016450882
                  - 0.019012451
                  - -0.048034668
                  - 0.034423828
                  - -0.033599854
                  - 0.020126343
                  - -0.04949951
                  - 0.071899414
                  - -0.06060791
                  - -0.043395996
                  - 0.012138367
                  - 0.022476196
                  - 0.029006958
                  - 0.04550171
                  - -0.03564453
                  - -0.015090942
                  - 0.055541992
                  - 0.014884949
                  - 0.020767212
                  - -0.01071167
                  - 0.046905518
                  - 0.033813477
                  - -0.04260254
                  - -0.00094127655
                  - 0.016708374
                  - -0.0011367798
                  - -0.030426025
                  - -0.03427124
                  - 0.01763916
                  - -0.012634277
                  - 0.030517578
                  - -0.055480957
                  - -0.054992676
                  - 0.056274414
                  - -0.0007033348
                  - -0.058624268
                  - 0.0061531067
                  - -0.008613586
                  - 0.016067505
                  - 0.003376007
                  - -0.01586914
                  - -0.025146484
                  - 0.008491516
                  - 0.053222656
                  - -0.02923584
                  - 0.021408081
              ubinary:
                - - 1
                  - 218
                  - 231
                  - 179
                  - 247
                  - 164
                  - 161
                  - 62
                  - 191
                  - 23
                  - 200
                  - 16
                  - 114
                  - 29
                  - 23
                  - 240
                  - 145
                  - 187
                  - 72
                  - 119
                  - 96
                  - 126
                  - 121
                  - 10
                  - 76
                  - 43
                  - 200
                  - 122
                  - 213
                  - 7
                  - 202
                  - 249
                  - 86
                  - 2
                  - 36
                  - 27
                  - 252
                  - 194
                  - 25
                  - 128
                  - 33
                  - 39
                  - 171
                  - 156
                  - 160
                  - 195
                  - 73
                  - 189
                  - 223
                  - 53
                  - 68
                  - 228
                  - 37
                  - 94
                  - 20
                  - 41
                  - 87
                  - 228
                  - 164
                  - 213
                  - 68
                  - 237
                  - 97
                  - 150
                  - 212
                  - 244
                  - 61
                  - 39
                  - 244
                  - 195
                  - 6
                  - 129
                  - 125
                  - 116
                  - 59
                  - 100
                  - 36
                  - 107
                  - 179
                  - 48
                  - 228
                  - 21
                  - 192
                  - 247
                  - 136
                  - 118
                  - 130
                  - 26
                  - 243
                  - 33
                  - 40
                  - 181
                  - 227
                  - 245
                  - 230
                  - 31
                  - 109
                  - 149
                  - 61
                  - 106
                  - 83
                  - 74
                  - 174
                  - 98
                  - 75
                  - 6
                  - 250
                  - 135
                  - 211
                  - 129
                  - 197
                  - 225
                  - 81
                  - 67
                  - 86
                  - 68
                  - 2
                  - 159
                  - 118
                  - 119
                  - 100
                  - 8
                  - 245
                  - 79
                  - 59
                  - 34
                  - 146
                  - 205
            meta:
              api_version:
                version: "1"
            api_version: v2
    EmbedJob:
      type: object
      required:
        - job_id
        - status
        - created_at
        - input_dataset_id
        - model
        - truncate
      properties:
        job_id:
          type: string
          x-fern-audiences:
            - public
          description: ID of the embed job
        name:
          type: string
          x-fern-audiences:
            - public
          description: The name of the embed job
        status:
          type: string
          x-fern-audiences:
            - public
          description: The status of the embed job
          enum:
            - processing
            - complete
            - cancelling
            - cancelled
            - failed
        created_at:
          type: string
          x-fern-audiences:
            - public
          description: The creation date of the embed job
          format: date-time
        input_dataset_id:
          type: string
          x-fern-audiences:
            - public
          description: ID of the input dataset
        output_dataset_id:
          type: string
          x-fern-audiences:
            - public
          description: ID of the resulting output dataset
        model:
          type: string
          x-fern-audiences:
            - public
          description: ID of the model used to embed
        truncate:
          type: string
          x-fern-audiences:
            - public
          description: The truncation option used
          enum:
            - START
            - END
        meta:
          $ref: "#/components/schemas/ApiMeta"
          x-fern-audiences:
            - public
    ListEmbedJobResponse:
      type: object
      properties:
        embed_jobs:
          type: array
          items:
            $ref: "#/components/schemas/EmbedJob"
          x-fern-audiences:
            - public
    CreateEmbedJobRequest:
      type: object
      required:
        - model
        - dataset_id
        - input_type
      properties:
        model:
          type: string
          x-fern-audiences:
            - public
          format: string
          description: |
            ID of the embedding model.

            Available models and corresponding embedding dimensions:

            - `embed-english-v3.0` : 1024
            - `embed-multilingual-v3.0` : 1024
            - `embed-english-light-v3.0` : 384
            - `embed-multilingual-light-v3.0` : 384
        dataset_id:
          type: string
          x-fern-audiences:
            - public
          description: >-
            ID of a [Dataset](https://docs.cohere.com/docs/datasets). The
            Dataset must be of type `embed-input` and must have a validation
            status `Validated`
        input_type:
          x-fern-audiences:
            - public
          $ref: "#/components/schemas/EmbedInputType"
        name:
          type: string
          x-fern-audiences:
            - public
          description: The name of the embed job.
        truncate:
          type: string
          x-fern-audiences:
            - public
          description: >
            One of `START|END` to specify how the API will handle inputs longer
            than the maximum token length.


            Passing `START` will discard the start of the input. `END` will
            discard the end of the input. In both cases, input is discarded
            until the remaining input is exactly the maximum input token length
            for the model.
          default: END
          enum:
            - START
            - END
    CreateEmbedJobResponse:
      type: object
      required:
        - job_id
      description: Response from creating an embed job.
      properties:
        job_id:
          type: string
          x-fern-audiences:
            - public
        meta:
          $ref: "#/components/schemas/ApiMeta"
          x-fern-audiences:
            - public
    ClassifyExample:
      type: object
      properties:
        text:
          type: string
          x-fern-audiences:
            - public
          writeOnly: true
        label:
          type: string
          x-fern-audiences:
            - public
          writeOnly: true
      writeOnly: true
    DatasetType:
      x-fern-audiences:
        - public
      description: The type of the dataset
      type: string
      enum:
        - embed-input
        - embed-result
        - cluster-result
        - cluster-outliers
        - reranker-finetune-input
        - prompt-completion-finetune-input
        - single-label-classification-finetune-input
        - chat-finetune-input
        - multi-label-classification-finetune-input
    DatasetValidationStatus:
      x-fern-audiences:
        - public
      description: The validation status of the dataset
      type: string
      enum:
        - unknown
        - queued
        - processing
        - failed
        - validated
        - skipped
    DatasetPart:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          x-fern-audiences:
            - public
          description: The dataset part ID
        name:
          type: string
          x-fern-audiences:
            - public
          description: The name of the dataset part
        url:
          type: string
          x-fern-audiences:
            - public
          description: The download url of the file
        index:
          type: integer
          x-fern-audiences:
            - public
          format: int32
          description: The index of the file
        size_bytes:
          type: integer
          x-fern-audiences:
            - public
          format: int32
          description: The size of the file in bytes
        num_rows:
          type: integer
          x-fern-audiences:
            - public
          format: int32
          description: The number of rows in the file
        original_url:
          type: string
          x-fern-audiences:
            - public
          description: The download url of the original file
    ParseInfo:
      type: object
      properties:
        separator:
          type: string
          x-fern-audiences:
            - public
          writeOnly: true
        delimiter:
          type: string
          x-fern-audiences:
            - public
          writeOnly: true
      writeOnly: true
    Dataset:
      type: object
      required:
        - id
        - name
        - created_at
        - updated_at
        - dataset_type
        - validation_status
      properties:
        id:
          type: string
          x-fern-audiences:
            - public
          description: The dataset ID
        name:
          type: string
          x-fern-audiences:
            - public
          description: The name of the dataset
        created_at:
          type: string
          x-fern-audiences:
            - public
          format: date-time
          description: The creation date
        updated_at:
          type: string
          x-fern-audiences:
            - public
          format: date-time
          description: The last update date
        dataset_type:
          x-fern-audiences:
            - public
          $ref: "#/components/schemas/DatasetType"
        validation_status:
          x-fern-audiences:
            - public
          $ref: "#/components/schemas/DatasetValidationStatus"
        validation_error:
          type: string
          x-fern-audiences:
            - public
          description: Errors found during validation
        schema:
          type: string
          x-fern-audiences:
            - public
          description: the avro schema of the dataset
        required_fields:
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
        preserve_fields:
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
        dataset_parts:
          type: array
          x-fern-audiences:
            - public
          items:
            $ref: "#/components/schemas/DatasetPart"
          description: the underlying files that make up the dataset
        validation_warnings:
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
          description: warnings found during validation
        parse_info:
          $ref: "#/components/schemas/ParseInfo"
    ConnectorOAuth:
      type: object
      required:
        - authorize_url
        - token_url
      properties:
        authorize_url:
          type: string
          x-fern-audiences:
            - public
          description: >-
            The OAuth 2.0 /authorize endpoint to use when users authorize the
            connector.
        token_url:
          type: string
          x-fern-audiences:
            - public
          description: >-
            The OAuth 2.0 /token endpoint to use when users authorize the
            connector.
        scope:
          type: string
          x-fern-audiences:
            - public
          description: The OAuth scopes to request when users authorize the connector.
    Connector:
      description: >-
        A connector allows you to integrate data sources with the '/chat'
        endpoint to create grounded generations with citations to the data
        source.

        documents to help answer users.
      type: object
      required:
        - id
        - name
        - created_at
        - updated_at
      properties:
        id:
          type: string
          x-fern-audiences:
            - public
          description: >-
            The unique identifier of the connector (used in both `/connectors` &
            `/chat` endpoints).

            This is automatically created from the name of the connector upon
            registration.
        organization_id:
          type: string
          x-fern-audiences:
            - public
          description: >-
            The organization to which this connector belongs. This is
            automatically set to

            the organization of the user who created the connector.
        name:
          type: string
          x-fern-audiences:
            - public
          description: A human-readable name for the connector.
        description:
          type: string
          x-fern-audiences:
            - public
          description: A description of the connector.
        url:
          type: string
          x-fern-audiences:
            - public
          description: The URL of the connector that will be used to search for documents.
        created_at:
          type: string
          x-fern-audiences:
            - public
          format: date-time
          description: The UTC time at which the connector was created.
        updated_at:
          type: string
          x-fern-audiences:
            - public
          format: date-time
          description: The UTC time at which the connector was last updated.
        excludes:
          description: >-
            A list of fields to exclude from the prompt (fields remain in the
            document).
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
        auth_type:
          description: >-
            The type of authentication/authorization used by the connector.
            Possible values: [oauth, service_auth]
          type: string
          x-fern-audiences:
            - public
          format: enum
        oauth:
          $ref: "#/components/schemas/ConnectorOAuth"
          x-fern-audiences:
            - public
          description: The OAuth 2.0 configuration for the connector.
        auth_status:
          type: string
          x-fern-audiences:
            - public
          enum:
            - valid
            - expired
          description: >-
            The OAuth status for the user making the request. One of ["valid",
            "expired", ""]. Empty string (field is omitted) means the user has
            not authorized the connector yet.
        active:
          type: boolean
          x-fern-audiences:
            - public
          description: Whether the connector is active or not.
        continue_on_failure:
          type: boolean
          x-fern-audiences:
            - public
          description: >-
            Whether a chat request should continue or not if the request to this
            connector fails.
    ListConnectorsResponse:
      type: object
      required:
        - connectors
      properties:
        connectors:
          type: array
          x-fern-audiences:
            - public
          items:
            $ref: "#/components/schemas/Connector"
    CreateConnectorOAuth:
      required:
        - clientId
        - clientSecret
        - authorizeUrl
        - tokenUrl
      type: object
      properties:
        client_id:
          type: string
          x-fern-audiences:
            - public
          description: The OAuth 2.0 client ID. This fields is encrypted at rest.
        client_secret:
          type: string
          x-fern-audiences:
            - public
          description: >-
            The OAuth 2.0 client Secret. This field is encrypted at rest and
            never returned in a response.
        authorize_url:
          type: string
          x-fern-audiences:
            - public
          description: >-
            The OAuth 2.0 /authorize endpoint to use when users authorize the
            connector.
        token_url:
          type: string
          x-fern-audiences:
            - public
          description: >-
            The OAuth 2.0 /token endpoint to use when users authorize the
            connector.
        scope:
          type: string
          x-fern-audiences:
            - public
          description: The OAuth scopes to request when users authorize the connector.
    AuthTokenType:
      type: string
      description: >-
        The token_type specifies the way the token is passed in the
        Authorization header. Valid values are "bearer", "basic", and
        "noscheme".
      enum:
        - bearer
        - basic
        - noscheme
      default: noscheme
    CreateConnectorServiceAuth:
      required:
        - type
        - token
      type: object
      properties:
        type:
          x-fern-audiences:
            - public
          $ref: "#/components/schemas/AuthTokenType"
        token:
          type: string
          x-fern-audiences:
            - public
          description: >-
            The token that will be used in the HTTP Authorization header when
            making requests to the connector. This field is encrypted at rest
            and never returned in a response.
    CreateConnectorRequest:
      type: object
      required:
        - name
        - url
      properties:
        name:
          type: string
          x-fern-audiences:
            - public
          description: A human-readable name for the connector.
        description:
          type: string
          x-fern-audiences:
            - public
          description: A description of the connector.
        url:
          type: string
          x-fern-audiences:
            - public
          description: The URL of the connector that will be used to search for documents.
        excludes:
          description: >-
            A list of fields to exclude from the prompt (fields remain in the
            document).
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
        oauth:
          $ref: "#/components/schemas/CreateConnectorOAuth"
          x-fern-audiences:
            - public
          description: >-
            The OAuth 2.0 configuration for the connector. Cannot be specified
            if service_auth is specified.
        active:
          type: boolean
          x-fern-audiences:
            - public
          default: true
          description: Whether the connector is active or not.
        continue_on_failure:
          type: boolean
          x-fern-audiences:
            - public
          default: false
          description: >-
            Whether a chat request should continue or not if the request to this
            connector fails.
        service_auth:
          x-fern-audiences:
            - public
          $ref: "#/components/schemas/CreateConnectorServiceAuth"
          description: >-
            The service to service authentication configuration for the
            connector. Cannot be specified if oauth is specified.
    CreateConnectorResponse:
      type: object
      required:
        - connector
      properties:
        connector:
          $ref: "#/components/schemas/Connector"
    GetConnectorResponse:
      type: object
      required:
        - connector
      properties:
        connector:
          $ref: "#/components/schemas/Connector"
    DeleteConnectorResponse:
      type: object
    UpdateConnectorRequest:
      type: object
      properties:
        name:
          type: string
          x-fern-audiences:
            - public
          description: A human-readable name for the connector.
        url:
          type: string
          x-fern-audiences:
            - public
          description: The URL of the connector that will be used to search for documents.
        excludes:
          description: >-
            A list of fields to exclude from the prompt (fields remain in the
            document).
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
        oauth:
          $ref: "#/components/schemas/CreateConnectorOAuth"
          x-fern-audiences:
            - public
          description: >-
            The OAuth 2.0 configuration for the connector. Cannot be specified
            if service_auth is specified.
        active:
          type: boolean
          x-fern-audiences:
            - public
          default: true
        continue_on_failure:
          type: boolean
          x-fern-audiences:
            - public
          default: false
        service_auth:
          x-fern-audiences:
            - public
          $ref: "#/components/schemas/CreateConnectorServiceAuth"
          description: >-
            The service to service authentication configuration for the
            connector. Cannot be specified if oauth is specified.
    UpdateConnectorResponse:
      type: object
      required:
        - connector
      properties:
        connector:
          $ref: "#/components/schemas/Connector"
    OAuthAuthorizeResponse:
      type: object
      properties:
        redirect_url:
          type: string
          x-fern-audiences:
            - public
          description: >-
            The OAuth 2.0 redirect url. Redirect the user to this url to
            authorize the connector.
    ConnectorLog:
      type: object
      required:
        - id
        - connector_id
        - request_id
        - user_id
        - organization_id
        - created_at
        - status_code
        - duration_millis
      properties:
        id:
          type: string
          description: Unique identifier for the connector log
        connector_id:
          type: string
          description: Unique identifier for the connector
        request_id:
          type: string
          description: Unique identifier for the request
        user_id:
          type: string
          description: Unique identifier for the user
        organization_id:
          type: string
          description: Unique identifier for the organization
        created_at:
          type: string
          description: Time of connector log creation in RFC3339 format
          format: date-time
          example: "2023-04-28T21:00:56.646Z"
        status_code:
          type: integer
          description: HTTP status code of the request
        duration_millis:
          type: integer
          description: Duration of the request in milliseconds
        error_message:
          type: string
          description: Error message of the request
    GetConnectorsLogsResponse:
      type: object
      required:
        - connector_logs
        - total
      properties:
        connector_logs:
          type: array
          items:
            $ref: "#/components/schemas/ConnectorLog"
        total:
          type: number
          description: Total number of connector logs
          readOnly: true
    TokenLikelihood:
      type: object
      properties:
        encoded:
          description: Tokenized text
          type: integer
          x-fern-audiences:
            - public
        decoded:
          description: Detokenized text
          type: string
          x-fern-audiences:
            - public
        log_likelihood:
          description: Non normalized probability of the token
          type: number
          x-fern-audiences:
            - public
    LogLikelihoodResponse:
      type: object
      required:
        - id
        - prompt_tokens
        - completion_tokens
        - raw_prompt_tokens
      properties:
        id:
          type: string
          x-fern-audiences:
            - public
        prompt_tokens:
          description: Probabilities for tokens in the request prompt
          type: array
          x-fern-audiences:
            - public
          items:
            $ref: "#/components/schemas/TokenLikelihood"
        completion_tokens:
          description: Probabilities for tokens in the request completion
          type: array
          x-fern-audiences:
            - public
          items:
            $ref: "#/components/schemas/TokenLikelihood"
        raw_prompt_tokens:
          description: Probabilities for tokens in the request raw_prompt
          type: array
          x-fern-audiences:
            - public
          items:
            $ref: "#/components/schemas/TokenLikelihood"
        meta:
          $ref: "#/components/schemas/ApiMeta"
          x-fern-audiences:
            - public
    Cluster:
      type: object
      properties:
        id:
          type: string
          x-fern-audiences:
            - public
        keywords:
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
        description:
          type: string
          x-fern-audiences:
            - public
        size:
          type: integer
          x-fern-audiences:
            - public
        sample_elements:
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
    GetClusterJobResponse:
      type: object
      required:
        - job_id
      properties:
        job_id:
          type: string
          x-fern-audiences:
            - public
        created_at:
          type: string
          x-fern-audiences:
            - public
          description: Time of job creation in RFC3339 format
          format: date-time
          example: "2023-04-28T21:00:56.646Z"
          readOnly: true
        embeddings_url:
          type: string
          x-fern-audiences:
            - public
          description: The input file URL used for the job
          readOnly: true
        input_dataset_id:
          type: string
          x-fern-audiences:
            - public
          description: The input dataset ID used for the job
          readOnly: true
        min_cluster_size:
          type: integer
          x-fern-audiences:
            - public
          description: >-
            The parameter used in the job creation. Please refer to the job
            creation endpoint for more details
          readOnly: true
        n_neighbors:
          type: integer
          x-fern-audiences:
            - public
          description: >-
            The parameter used in the job creation. Please refer to the job
            creation endpoint for more details
          readOnly: true
        is_deterministic:
          type: boolean
          x-fern-audiences:
            - public
          description: >-
            The parameter used in the job creation. Please refer to the job
            creation endpoint for more details
          readOnly: true
        status:
          type: string
          x-fern-audiences:
            - public
          enum:
            - unknown
            - processing
            - failed
            - complete
            - queued
        is_final_state:
          type: boolean
          x-fern-audiences:
            - public
          description: >-
            A boolean indicating whether the job is in a final state, whether
            completed or failed
          readOnly: true
        output_clusters_url:
          type: string
          x-fern-audiences:
            - public
          description: The output file URL for the clusters (signed url that expires)
          readOnly: true
        output_outliers_url:
          type: string
          x-fern-audiences:
            - public
          description: The output file URL for the outliers (signed url that expires)
          readOnly: true
        clusters:
          type: array
          x-fern-audiences:
            - public
          description: The list of cluster summaries for the job
          readOnly: true
          items:
            $ref: "#/components/schemas/Cluster"
        error:
          type: string
          x-fern-audiences:
            - public
        meta:
          $ref: "#/components/schemas/ApiMeta"
          x-fern-audiences:
            - public
      description: Response for getting a cluster job.
    ListClusterJobsResponse:
      type: object
      required:
        - jobs
      properties:
        jobs:
          type: array
          x-fern-audiences:
            - public
          items:
            $ref: "#/components/schemas/GetClusterJobResponse"
        total_count:
          type: integer
          x-fern-audiences:
            - public
        meta:
          $ref: "#/components/schemas/ApiMeta"
          x-fern-audiences:
            - public
    CreateClusterJobRequest:
      type: object
      properties:
        required:
          - embeddings_url
        embeddings_url:
          type: string
          x-fern-audiences:
            - public
        input_dataset_id:
          type: string
          x-fern-audiences:
            - public
        min_cluster_size:
          type: integer
          x-fern-audiences:
            - public
          description: >-
            Defaults to `10`. Parameter for HDBSCAN. Only clusters with this
            number of elements will be returned with a positive cluster number.
          default: 10
          minimum: 1
        n_neighbors:
          type: integer
          x-fern-audiences:
            - public
          description: >-
            Parameter for UMAP. A scalar governing how to balance global vs
            local structure in the data.
          minimum: 2
          maximum: 100
          default: 15
        is_deterministic:
          type: boolean
          x-fern-audiences:
            - public
          description: >-
            Parameter for UMAP. A boolean governing whether the embeddings from
            UMAP (that will be clustered with HDBSCAN) are deterministic.
          default: true
        generate_descriptions:
          type: boolean
          x-fern-audiences:
            - public
    CreateClusterJobResponse:
      type: object
      required:
        - job_id
      properties:
        job_id:
          type: string
          x-fern-audiences:
            - public
      description: Response for creating a cluster job.
    UpdateClusterJobRequest:
      type: object
      properties:
        status:
          type: string
          x-fern-audiences:
            - public
          enum:
            - unknown
            - processing
            - failed
            - complete
            - queued
        clusters:
          type: array
          x-fern-audiences:
            - public
          items:
            $ref: "#/components/schemas/Cluster"
        output_clusters_gs_path:
          type: string
          x-fern-audiences:
            - public
        output_outliers_gs_path:
          type: string
          x-fern-audiences:
            - public
        error:
          type: string
          x-fern-audiences:
            - public
        input_tracking_metrics:
          type: object
          x-fern-audiences:
            - public
        output_tracking_metrics:
          type: object
          x-fern-audiences:
            - public
    UpdateClusterJobResponse:
      type: object
      required:
        - job_id
      properties:
        job_id:
          type: string
          x-fern-audiences:
            - public
      description: Response for updating a cluster job.
    ModelConfig:
      required:
        - route
        - name
      properties:
        route:
          type: string
          x-fern-audiences:
            - public
        name:
          type: string
          x-fern-audiences:
            - public
        billing_model_name:
          type: string
          x-fern-audiences:
            - public
        model_id:
          type: string
          x-fern-audiences:
            - public
        model_size:
          type: string
          x-fern-audiences:
            - public
        finetune_id:
          type: string
          x-fern-audiences:
            - public
        endpoint_type:
          type: string
          x-fern-audiences:
            - public
        model_type:
          type: string
          x-fern-audiences:
            - public
        nemo_model_id:
          type: string
          x-fern-audiences:
            - public
        model_url:
          type: string
          x-fern-audiences:
            - public
        context_length:
          type: integer
          x-fern-audiences:
            - public
        serving_framework:
          type: string
          x-fern-audiences:
            - public
        serving_entrypoint:
          type: string
          x-fern-audiences:
            - public
        compatible_endpoints:
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
        prompt_templates:
          type: object
          x-fern-audiences:
            - public
          additionalProperties:
            type: string
            x-fern-audiences:
              - public
        compression_values:
          type: object
          x-fern-audiences:
            - public
          additionalProperties:
            type: number
            x-fern-audiences:
              - public
        compatibility_version:
          type: integer
          x-fern-audiences:
            - public
        default_language:
          type: string
          x-fern-audiences:
            - public
        additional_languages:
          type: string
          x-fern-audiences:
            - public
        labels:
          type: array
          x-fern-audiences:
            - public
          items:
            type: string
            x-fern-audiences:
              - public
        multi_label:
          type: boolean
          x-fern-audiences:
            - public
        baseline_model:
          type: string
          x-fern-audiences:
            - public
        is_baseline:
          type: boolean
          x-fern-audiences:
            - public
        tokenizer_id:
          type: string
          x-fern-audiences:
            - public
        end_of_sequence_string:
          type: string
          x-fern-audiences:
            - public
        streaming:
          type: boolean
          x-fern-audiences:
            - public
        group:
          type: string
          x-fern-audiences:
            - public
        model_version:
          type: string
          x-fern-audiences:
            - public
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
